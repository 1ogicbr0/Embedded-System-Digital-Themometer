

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 02 07:35:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F882
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.40
    44                           ; Generated 17/11/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F882 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458                           
   459                           	psect	idataCOMMON
   460  07BB                     __pidataCOMMON:
   461                           
   462                           ;initializer for _Degree
   463  07BB  3443               	retlw	67
   464                           
   465                           	psect	idataBANK0
   466  07B6                     __pidataBANK0:
   467                           
   468                           ;initializer for _tempMax
   469  07B6  34CE               	retlw	206
   470  07B7  34FF               	retlw	255
   471                           
   472                           ;initializer for _tempMin
   473  07B8  34C8               	retlw	200
   474  07B9  3400               	retlw	0
   475                           
   476                           ;initializer for _temparraysize
   477  07BA  3479               	retlw	121
   478                           
   479                           	psect	stringtext
   480  0100                     __pstringtext:
   481  0100                     stringtab:
   482  0100                     __stringtab:
   483                           
   484                           ;	String table - string pointers are 2 bytes each
   485  0100  1BFF               	btfsc	btemp+1,7
   486  0101  290A               	ljmp	stringcode
   487  0102  1383               	bcf	3,7
   488  0103  187F               	btfsc	btemp+1,0
   489  0104  1783               	bsf	3,7
   490  0105  0800               	movf	0,w
   491  0106  0A84               	incf	4,f
   492  0107  1903               	skipnz
   493  0108  0AFF               	incf	btemp+1,f
   494  0109  0008               	return
   495  010A                     stringcode:
   496  010A  087F               	movf	btemp+1,w
   497  010B  397F               	andlw	127
   498  010C  008A               	movwf	10
   499  010D  0804               	movf	4,w
   500  010E  0A84               	incf	4,f
   501  010F  1903               	skipnz
   502  0110  0AFF               	incf	btemp+1,f
   503  0111  0082               	movwf	2
   504  0112                     __stringbase:
   505  0112                     __end_of__stringtab:
   506  0112                     _ThermValueLUT:
   507  0112  3465               	retlw	101
   508  0113  3403               	retlw	3
   509  0114  345C               	retlw	92
   510  0115  3403               	retlw	3
   511  0116  3454               	retlw	84
   512  0117  3403               	retlw	3
   513  0118  344C               	retlw	76
   514  0119  3403               	retlw	3
   515  011A  3445               	retlw	69
   516  011B  3403               	retlw	3
   517  011C  343D               	retlw	61
   518  011D  3403               	retlw	3
   519  011E  3435               	retlw	53
   520  011F  3403               	retlw	3
   521  0120  342D               	retlw	45
   522  0121  3403               	retlw	3
   523  0122  3424               	retlw	36
   524  0123  3403               	retlw	3
   525  0124  341B               	retlw	27
   526  0125  3403               	retlw	3
   527  0126  3417               	retlw	23
   528  0127  3403               	retlw	3
   529  0128  340E               	retlw	14
   530  0129  3403               	retlw	3
   531  012A  3404               	retlw	4
   532  012B  3403               	retlw	3
   533  012C  34FB               	retlw	251
   534  012D  3402               	retlw	2
   535  012E  34F1               	retlw	241
   536  012F  3402               	retlw	2
   537  0130  34E7               	retlw	231
   538  0131  3402               	retlw	2
   539  0132  34DC               	retlw	220
   540  0133  3402               	retlw	2
   541  0134  34D2               	retlw	210
   542  0135  3402               	retlw	2
   543  0136  34C7               	retlw	199
   544  0137  3402               	retlw	2
   545  0138  34BC               	retlw	188
   546  0139  3402               	retlw	2
   547  013A  34AF               	retlw	175
   548  013B  3402               	retlw	2
   549  013C  34A2               	retlw	162
   550  013D  3402               	retlw	2
   551  013E  3498               	retlw	152
   552  013F  3402               	retlw	2
   553  0140  348E               	retlw	142
   554  0141  3402               	retlw	2
   555  0142  3484               	retlw	132
   556  0143  3402               	retlw	2
   557  0144  3479               	retlw	121
   558  0145  3402               	retlw	2
   559  0146  346E               	retlw	110
   560  0147  3402               	retlw	2
   561  0148  3464               	retlw	100
   562  0149  3402               	retlw	2
   563  014A  3459               	retlw	89
   564  014B  3402               	retlw	2
   565  014C  344E               	retlw	78
   566  014D  3402               	retlw	2
   567  014E  3443               	retlw	67
   568  014F  3402               	retlw	2
   569  0150  343D               	retlw	61
   570  0151  3402               	retlw	2
   571  0152  3432               	retlw	50
   572  0153  3402               	retlw	2
   573  0154  3427               	retlw	39
   574  0155  3402               	retlw	2
   575  0156  341C               	retlw	28
   576  0157  3402               	retlw	2
   577  0158  3411               	retlw	17
   578  0159  3402               	retlw	2
   579  015A  3405               	retlw	5
   580  015B  3402               	retlw	2
   581  015C  34FA               	retlw	250
   582  015D  3401               	retlw	1
   583  015E  34EF               	retlw	239
   584  015F  3401               	retlw	1
   585  0160  34E4               	retlw	228
   586  0161  3401               	retlw	1
   587  0162  34D9               	retlw	217
   588  0163  3401               	retlw	1
   589  0164  34CE               	retlw	206
   590  0165  3401               	retlw	1
   591  0166  34C2               	retlw	194
   592  0167  3401               	retlw	1
   593  0168  34B7               	retlw	183
   594  0169  3401               	retlw	1
   595  016A  34AC               	retlw	172
   596  016B  3401               	retlw	1
   597  016C  34A2               	retlw	162
   598  016D  3401               	retlw	1
   599  016E  3497               	retlw	151
   600  016F  3401               	retlw	1
   601  0170  348C               	retlw	140
   602  0171  3401               	retlw	1
   603  0172  3481               	retlw	129
   604  0173  3401               	retlw	1
   605  0174  3474               	retlw	116
   606  0175  3401               	retlw	1
   607  0176  3474               	retlw	116
   608  0177  3401               	retlw	1
   609  0178  3468               	retlw	104
   610  0179  3401               	retlw	1
   611  017A  3460               	retlw	96
   612  017B  3401               	retlw	1
   613  017C  3457               	retlw	87
   614  017D  3401               	retlw	1
   615  017E  344E               	retlw	78
   616  017F  3401               	retlw	1
   617  0180  3446               	retlw	70
   618  0181  3401               	retlw	1
   619  0182  343D               	retlw	61
   620  0183  3401               	retlw	1
   621  0184  3435               	retlw	53
   622  0185  3401               	retlw	1
   623  0186  342D               	retlw	45
   624  0187  3401               	retlw	1
   625  0188  3425               	retlw	37
   626  0189  3401               	retlw	1
   627  018A  341D               	retlw	29
   628  018B  3401               	retlw	1
   629  018C  3415               	retlw	21
   630  018D  3401               	retlw	1
   631  018E  340E               	retlw	14
   632  018F  3401               	retlw	1
   633  0190  3406               	retlw	6
   634  0191  3401               	retlw	1
   635  0192  34FF               	retlw	255
   636  0193  3400               	retlw	0
   637  0194  34F8               	retlw	248
   638  0195  3400               	retlw	0
   639  0196  34F1               	retlw	241
   640  0197  3400               	retlw	0
   641  0198  34EA               	retlw	234
   642  0199  3400               	retlw	0
   643  019A  34E3               	retlw	227
   644  019B  3400               	retlw	0
   645  019C  34DC               	retlw	220
   646  019D  3400               	retlw	0
   647  019E  34D6               	retlw	214
   648  019F  3400               	retlw	0
   649  01A0  34D2               	retlw	210
   650  01A1  3400               	retlw	0
   651  01A2  34CC               	retlw	204
   652  01A3  3400               	retlw	0
   653  01A4  34C6               	retlw	198
   654  01A5  3400               	retlw	0
   655  01A6  34C0               	retlw	192
   656  01A7  3400               	retlw	0
   657  01A8  34BA               	retlw	186
   658  01A9  3400               	retlw	0
   659  01AA  34B1               	retlw	177
   660  01AB  3400               	retlw	0
   661  01AC  34B1               	retlw	177
   662  01AD  3400               	retlw	0
   663  01AE  34A7               	retlw	167
   664  01AF  3400               	retlw	0
   665  01B0  34A3               	retlw	163
   666  01B1  3400               	retlw	0
   667  01B2  349E               	retlw	158
   668  01B3  3400               	retlw	0
   669  01B4  349A               	retlw	154
   670  01B5  3400               	retlw	0
   671  01B6  3495               	retlw	149
   672  01B7  3400               	retlw	0
   673  01B8  3491               	retlw	145
   674  01B9  3400               	retlw	0
   675  01BA  348D               	retlw	141
   676  01BB  3400               	retlw	0
   677  01BC  3489               	retlw	137
   678  01BD  3400               	retlw	0
   679  01BE  3485               	retlw	133
   680  01BF  3400               	retlw	0
   681  01C0  3481               	retlw	129
   682  01C1  3400               	retlw	0
   683  01C2  347D               	retlw	125
   684  01C3  3400               	retlw	0
   685  01C4  3479               	retlw	121
   686  01C5  3400               	retlw	0
   687  01C6  3476               	retlw	118
   688  01C7  3400               	retlw	0
   689  01C8  3474               	retlw	116
   690  01C9  3400               	retlw	0
   691  01CA  3470               	retlw	112
   692  01CB  3400               	retlw	0
   693  01CC  346D               	retlw	109
   694  01CD  3400               	retlw	0
   695  01CE  346A               	retlw	106
   696  01CF  3400               	retlw	0
   697  01D0  3467               	retlw	103
   698  01D1  3400               	retlw	0
   699  01D2  3463               	retlw	99
   700  01D3  3400               	retlw	0
   701  01D4  3460               	retlw	96
   702  01D5  3400               	retlw	0
   703  01D6  345D               	retlw	93
   704  01D7  3400               	retlw	0
   705  01D8  345A               	retlw	90
   706  01D9  3400               	retlw	0
   707  01DA  3456               	retlw	86
   708  01DB  3400               	retlw	0
   709  01DC  3455               	retlw	85
   710  01DD  3400               	retlw	0
   711  01DE  3453               	retlw	83
   712  01DF  3400               	retlw	0
   713  01E0  3450               	retlw	80
   714  01E1  3400               	retlw	0
   715  01E2  344E               	retlw	78
   716  01E3  3400               	retlw	0
   717  01E4  344C               	retlw	76
   718  01E5  3400               	retlw	0
   719  01E6  344A               	retlw	74
   720  01E7  3400               	retlw	0
   721  01E8  3448               	retlw	72
   722  01E9  3400               	retlw	0
   723  01EA  3446               	retlw	70
   724  01EB  3400               	retlw	0
   725  01EC  3444               	retlw	68
   726  01ED  3400               	retlw	0
   727  01EE  3442               	retlw	66
   728  01EF  3400               	retlw	0
   729  01F0  3441               	retlw	65
   730  01F1  3400               	retlw	0
   731  01F2  343F               	retlw	63
   732  01F3  3400               	retlw	0
   733  01F4  343D               	retlw	61
   734  01F5  3400               	retlw	0
   735  01F6  343C               	retlw	60
   736  01F7  3400               	retlw	0
   737  01F8  343A               	retlw	58
   738  01F9  3400               	retlw	0
   739  01FA  3438               	retlw	56
   740  01FB  3400               	retlw	0
   741  01FC  3437               	retlw	55
   742  01FD  3400               	retlw	0
   743  01FE  3435               	retlw	53
   744  01FF  3400               	retlw	0
   745  0200  3434               	retlw	52
   746  0201  3400               	retlw	0
   747  0202  3432               	retlw	50
   748  0203  3400               	retlw	0
   749  0204                     __end_of_ThermValueLUT:
   750  0204                     _TempLUT:
   751  0204  34F6               	retlw	-10
   752  0205  34F7               	retlw	-9
   753  0206  34F8               	retlw	-8
   754  0207  34F9               	retlw	-7
   755  0208  34FA               	retlw	-6
   756  0209  34FB               	retlw	-5
   757  020A  34FC               	retlw	-4
   758  020B  34FD               	retlw	-3
   759  020C  34FE               	retlw	-2
   760  020D  34FF               	retlw	-1
   761  020E  3400               	retlw	0
   762  020F  3401               	retlw	1
   763  0210  3402               	retlw	2
   764  0211  3403               	retlw	3
   765  0212  3404               	retlw	4
   766  0213  3405               	retlw	5
   767  0214  3406               	retlw	6
   768  0215  3407               	retlw	7
   769  0216  3408               	retlw	8
   770  0217  3409               	retlw	9
   771  0218  340A               	retlw	10
   772  0219  340B               	retlw	11
   773  021A  340C               	retlw	12
   774  021B  340D               	retlw	13
   775  021C  340E               	retlw	14
   776  021D  340F               	retlw	15
   777  021E  3410               	retlw	16
   778  021F  3411               	retlw	17
   779  0220  3412               	retlw	18
   780  0221  3413               	retlw	19
   781  0222  3414               	retlw	20
   782  0223  3415               	retlw	21
   783  0224  3416               	retlw	22
   784  0225  3417               	retlw	23
   785  0226  3418               	retlw	24
   786  0227  3419               	retlw	25
   787  0228  341A               	retlw	26
   788  0229  341B               	retlw	27
   789  022A  341C               	retlw	28
   790  022B  341D               	retlw	29
   791  022C  341E               	retlw	30
   792  022D  341F               	retlw	31
   793  022E  3420               	retlw	32
   794  022F  3421               	retlw	33
   795  0230  3422               	retlw	34
   796  0231  3423               	retlw	35
   797  0232  3424               	retlw	36
   798  0233  3425               	retlw	37
   799  0234  3426               	retlw	38
   800  0235  3427               	retlw	39
   801  0236  3428               	retlw	40
   802  0237  3429               	retlw	41
   803  0238  342A               	retlw	42
   804  0239  342B               	retlw	43
   805  023A  342C               	retlw	44
   806  023B  342D               	retlw	45
   807  023C  342E               	retlw	46
   808  023D  342F               	retlw	47
   809  023E  3430               	retlw	48
   810  023F  3431               	retlw	49
   811  0240  3432               	retlw	50
   812  0241  3433               	retlw	51
   813  0242  3434               	retlw	52
   814  0243  3435               	retlw	53
   815  0244  3436               	retlw	54
   816  0245  3437               	retlw	55
   817  0246  3438               	retlw	56
   818  0247  3439               	retlw	57
   819  0248  343A               	retlw	58
   820  0249  343B               	retlw	59
   821  024A  343C               	retlw	60
   822  024B  343D               	retlw	61
   823  024C  343E               	retlw	62
   824  024D  343F               	retlw	63
   825  024E  3440               	retlw	64
   826  024F  3441               	retlw	65
   827  0250  3442               	retlw	66
   828  0251  3443               	retlw	67
   829  0252  3444               	retlw	68
   830  0253  3445               	retlw	69
   831  0254  3446               	retlw	70
   832  0255  3447               	retlw	71
   833  0256  3448               	retlw	72
   834  0257  3449               	retlw	73
   835  0258  344A               	retlw	74
   836  0259  344B               	retlw	75
   837  025A  344C               	retlw	76
   838  025B  344D               	retlw	77
   839  025C  344E               	retlw	78
   840  025D  344F               	retlw	79
   841  025E  3450               	retlw	80
   842  025F  3451               	retlw	81
   843  0260  3452               	retlw	82
   844  0261  3453               	retlw	83
   845  0262  3454               	retlw	84
   846  0263  3455               	retlw	85
   847  0264  3456               	retlw	86
   848  0265  3457               	retlw	87
   849  0266  3458               	retlw	88
   850  0267  3459               	retlw	89
   851  0268  345A               	retlw	90
   852  0269  345B               	retlw	91
   853  026A  345C               	retlw	92
   854  026B  345D               	retlw	93
   855  026C  345E               	retlw	94
   856  026D  345F               	retlw	95
   857  026E  3460               	retlw	96
   858  026F  3461               	retlw	97
   859  0270  3462               	retlw	98
   860  0271  3463               	retlw	99
   861  0272  3464               	retlw	100
   862  0273  3465               	retlw	101
   863  0274  3466               	retlw	102
   864  0275  3467               	retlw	103
   865  0276  3468               	retlw	104
   866  0277  3469               	retlw	105
   867  0278  346A               	retlw	106
   868  0279  346B               	retlw	107
   869  027A  346C               	retlw	108
   870  027B  346D               	retlw	109
   871  027C  346E               	retlw	110
   872  027D                     __end_of_TempLUT:
   873  027D                     _myString1:
   874  027D  3454               	retlw	84
   875  027E  3465               	retlw	101
   876  027F  346D               	retlw	109
   877  0280  3470               	retlw	112
   878  0281  343D               	retlw	61
   879  0282  3400               	retlw	0
   880  0283                     __end_of_myString1:
   881  0283                     _myString3:
   882  0283  344D               	retlw	77
   883  0284  3461               	retlw	97
   884  0285  3478               	retlw	120
   885  0286  343D               	retlw	61
   886  0287  3400               	retlw	0
   887  0288                     __end_of_myString3:
   888  0288                     _myString2:
   889  0288  344D               	retlw	77
   890  0289  3469               	retlw	105
   891  028A  346E               	retlw	110
   892  028B  343D               	retlw	61
   893  028C  3400               	retlw	0
   894  028D                     __end_of_myString2:
   895  0007                     _PORTCbits	set	7
   896  001E                     _ADRESH	set	30
   897  001F                     _ADCON0bits	set	31
   898  001F                     _ADCON0	set	31
   899  0006                     _PORTBbits	set	6
   900  000B                     _INTCONbits	set	11
   901  0006                     _PORTB	set	6
   902  0007                     _PORTC	set	7
   903  005F                     _GIE	set	95
   904  009E                     _ADRESL	set	158
   905  009F                     _ADCON1	set	159
   906  0086                     _TRISB	set	134
   907  0096                     _IOCBbits	set	150
   908  0081                     _OPTION_REGbits	set	129
   909  0087                     _TRISC	set	135
   910  0431                     _TRISB1	set	1073
   911  0430                     _TRISB0	set	1072
   912  0189                     _ANSELH	set	393
   913  0188                     _ANSEL	set	392
   914  028D                     STR_1:
   915  028D  3420               	retlw	32	;' '
   916  028E  3464               	retlw	100	;'d'
   917  028F  3465               	retlw	101	;'e'
   918  0290  3467               	retlw	103	;'g'
   919  0291  3420               	retlw	32	;' '
   920  0292  3400               	retlw	0
   921                           
   922                           	psect	cinit
   923  000B                     start_initialization:	
   924                           ; #config settings
   925                           
   926  000B                     __initialization:
   927                           
   928                           ; Initialize objects allocated to BANK0
   929  000B  27B6               	fcall	__pidataBANK0	;fetch initializer
   930  000C  00D3               	movwf	__pdataBANK0& (0+127)
   931  000D  27B7               	fcall	__pidataBANK0+1	;fetch initializer
   932  000E  00D4               	movwf	(__pdataBANK0+1)& (0+127)
   933  000F  27B8               	fcall	__pidataBANK0+2	;fetch initializer
   934  0010  00D5               	movwf	(__pdataBANK0+2)& (0+127)
   935  0011  27B9               	fcall	__pidataBANK0+3	;fetch initializer
   936  0012  00D6               	movwf	(__pdataBANK0+3)& (0+127)
   937  0013  27BA               	fcall	__pidataBANK0+4	;fetch initializer
   938  0014  00D7               	movwf	(__pdataBANK0+4)& (0+127)
   939                           
   940                           ; Initialize objects allocated to COMMON
   941  0015  27BB               	fcall	__pidataCOMMON	;fetch initializer
   942  0016  00FA               	movwf	__pdataCOMMON& (0+127)
   943                           
   944                           ; Clear objects allocated to BANK0
   945  0017  01D8               	clrf	__pbssBANK0& (0+127)
   946  0018  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   947                           
   948                           ; Clear objects allocated to COMMON
   949  0019  01F8               	clrf	__pbssCOMMON& (0+127)
   950  001A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   951  001B                     end_of_initialization:	
   952                           ;End of C runtime variable initialization code
   953                           
   954  001B                     __end_of__initialization:
   955  001B  0183               	clrf	3
   956  001C  2CF0               	ljmp	_main	;jump to C main() function
   957                           
   958                           	psect	bssCOMMON
   959  0078                     __pbssCOMMON:
   960  0078                     _temp:
   961  0078                     	ds	2
   962                           
   963                           	psect	dataCOMMON
   964  007A                     __pdataCOMMON:
   965  007A                     _Degree:
   966  007A                     	ds	1
   967                           
   968                           	psect	bssBANK0
   969  0058                     __pbssBANK0:
   970  0058                     _count_Interrupt:
   971  0058                     	ds	2
   972                           
   973                           	psect	dataBANK0
   974  0053                     __pdataBANK0:
   975  0053                     _tempMax:
   976  0053                     	ds	2
   977  0055                     _tempMin:
   978  0055                     	ds	2
   979  0057                     _temparraysize:
   980  0057                     	ds	1
   981                           
   982                           	psect	cstackCOMMON
   983  0070                     __pcstackCOMMON:
   984  0070                     ?_LCD_initialise:
   985  0070                     ?_ADC_initialise:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_convrtDegree:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_LCD_clear:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_compareTemp:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_displaySetup:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_LCD_putch:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_ADC_channel_select:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_main:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_reset:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ??_reset:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_flip_deg:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ??_flip_deg:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_my_ISR:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x0
  1026  0070                     	ds	1
  1027  0071                     ??_my_ISR:
  1028                           
  1029                           ; 1 bytes @ 0x1
  1030  0071                     	ds	2
  1031  0073                     ??_ADC_initialise:
  1032  0073                     ??_compareTemp:	
  1033                           ; 1 bytes @ 0x3
  1034                           
  1035  0073                     ??_ADC_channel_select:	
  1036                           ; 1 bytes @ 0x3
  1037                           
  1038  0073                     ?_LCD_write:	
  1039                           ; 1 bytes @ 0x3
  1040                           
  1041  0073                     ??___lldiv:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044  0073                     ??___llmod:	
  1045                           ; 1 bytes @ 0x3
  1046                           
  1047  0073                     ?_ADC_read:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050  0073                     ?_ConvCtoF:	
  1051                           ; 2 bytes @ 0x3
  1052                           
  1053  0073                     LCD_write@rs:	
  1054                           ; 2 bytes @ 0x3
  1055                           
  1056  0073                     ConvCtoF@tempC:	
  1057                           ; 1 bytes @ 0x3
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x3
  1061  0073                     	ds	1
  1062  0074                     ??_LCD_write:
  1063  0074                     ADC_channel_select@channel:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0074                     ___llmod@counter:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x4
  1071  0074                     	ds	1
  1072  0075                     ??_ADC_read:
  1073  0075                     ??_LCD_clear:	
  1074                           ; 1 bytes @ 0x5
  1075                           
  1076  0075                     ?_LCD_cursor:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079  0075                     ??_LCD_putch:	
  1080                           ; 1 bytes @ 0x5
  1081                           
  1082  0075                     ??_ultoa:	
  1083                           ; 1 bytes @ 0x5
  1084                           
  1085  0075                     ??_ConvCtoF:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0075                     LCD_putch@c:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091  0075                     LCD_cursor@y:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094  0075                     ADC_read@result:	
  1095                           ; 1 bytes @ 0x5
  1096                           
  1097  0075                     LCD_clear@counter:	
  1098                           ; 2 bytes @ 0x5
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x5
  1102  0075                     	ds	1
  1103  0076                     ??_LCD_cursor:
  1104  0076                     ??_ltoa:	
  1105                           ; 1 bytes @ 0x6
  1106                           
  1107  0076                     LCD_putch@counter:	
  1108                           ; 1 bytes @ 0x6
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x6
  1112  0076                     	ds	1
  1113  0077                     ??_LCD_initialise:
  1114  0077                     LCD_cursor@x:	
  1115                           ; 1 bytes @ 0x7
  1116                           
  1117  0077                     GetThermistorTemp@i:	
  1118                           ; 1 bytes @ 0x7
  1119                           
  1120  0077                     ltoa@buf:	
  1121                           ; 1 bytes @ 0x7
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x7
  1125  0077                     	ds	1
  1126  0078                     ??_convrtDegree:
  1127  0078                     ??_displaySetup:	
  1128                           ; 1 bytes @ 0x8
  1129                           
  1130  0078                     ??_LCD_display_value:	
  1131                           ; 1 bytes @ 0x8
  1132                           
  1133  0078                     ??_mv_Right:	
  1134                           ; 1 bytes @ 0x8
  1135                           
  1136                           
  1137                           	psect	cstackBANK0
  1138  0020                     __pcstackBANK0:	
  1139                           ; 1 bytes @ 0x8
  1140                           
  1141  0020                     ?_GetThermistorTemp:
  1142  0020                     ?___lldiv:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0020                     ?___llmod:	
  1146                           ; 4 bytes @ 0x0
  1147                           
  1148  0020                     LCD_write@temp:	
  1149                           ; 4 bytes @ 0x0
  1150                           
  1151  0020                     ConvCtoF@tempF:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0020                     GetThermistorTemp@ADCValue:	
  1155                           ; 2 bytes @ 0x0
  1156                           
  1157  0020                     ___lldiv@divisor:	
  1158                           ; 2 bytes @ 0x0
  1159                           
  1160  0020                     ___llmod@divisor:	
  1161                           ; 4 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x0
  1165  0020                     	ds	1
  1166  0021                     LCD_write@intsON:
  1167                           
  1168                           ; 1 bytes @ 0x1
  1169  0021                     	ds	1
  1170  0022                     ??_GetThermistorTemp:
  1171  0022                     LCD_write@TRISC_BAK:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x2
  1176  0022                     	ds	1
  1177  0023                     LCD_write@c:
  1178                           
  1179                           ; 1 bytes @ 0x3
  1180  0023                     	ds	1
  1181  0024                     LCD_write@RSmask:
  1182  0024                     ___lldiv@dividend:	
  1183                           ; 1 bytes @ 0x4
  1184                           
  1185  0024                     ___llmod@dividend:	
  1186                           ; 4 bytes @ 0x4
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x4
  1190  0024                     	ds	1
  1191  0025                     convrtDegree@tempCheck:
  1192  0025                     LCD_write@counter:	
  1193                           ; 2 bytes @ 0x5
  1194                           
  1195                           
  1196                           ; 2 bytes @ 0x5
  1197  0025                     	ds	2
  1198  0027                     ?_LCD_puts:
  1199  0027                     ?_mv_Right:	
  1200                           ; 1 bytes @ 0x7
  1201                           
  1202  0027                     mv_Right@a:	
  1203                           ; 1 bytes @ 0x7
  1204                           
  1205  0027                     LCD_initialise@counter:	
  1206                           ; 2 bytes @ 0x7
  1207                           
  1208  0027                     LCD_puts@s:	
  1209                           ; 2 bytes @ 0x7
  1210                           
  1211                           
  1212                           ; 2 bytes @ 0x7
  1213  0027                     	ds	1
  1214  0028                     ___lldiv@quotient:
  1215                           
  1216                           ; 4 bytes @ 0x8
  1217  0028                     	ds	1
  1218  0029                     ??_LCD_puts:
  1219                           
  1220                           ; 1 bytes @ 0x9
  1221  0029                     	ds	1
  1222  002A                     LCD_puts@i:
  1223                           
  1224                           ; 1 bytes @ 0xA
  1225  002A                     	ds	1
  1226  002B                     LCD_puts@c:
  1227                           
  1228                           ; 1 bytes @ 0xB
  1229  002B                     	ds	1
  1230  002C                     ___lldiv@counter:
  1231                           
  1232                           ; 1 bytes @ 0xC
  1233  002C                     	ds	1
  1234  002D                     ?_ultoa:
  1235  002D                     ultoa@val:	
  1236                           ; 1 bytes @ 0xD
  1237                           
  1238                           
  1239                           ; 4 bytes @ 0xD
  1240  002D                     	ds	4
  1241  0031                     ultoa@base:
  1242                           
  1243                           ; 2 bytes @ 0x11
  1244  0031                     	ds	2
  1245  0033                     ultoa@v:
  1246                           
  1247                           ; 4 bytes @ 0x13
  1248  0033                     	ds	4
  1249  0037                     ultoa@c:
  1250                           
  1251                           ; 1 bytes @ 0x17
  1252  0037                     	ds	1
  1253  0038                     ultoa@buf:
  1254                           
  1255                           ; 1 bytes @ 0x18
  1256  0038                     	ds	1
  1257  0039                     ?_ltoa:
  1258  0039                     ltoa@val:	
  1259                           ; 1 bytes @ 0x19
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x19
  1263  0039                     	ds	4
  1264  003D                     ltoa@base:
  1265                           
  1266                           ; 2 bytes @ 0x1D
  1267  003D                     	ds	2
  1268  003F                     ?_LCD_display_value:
  1269  003F                     LCD_display_value@value:	
  1270                           ; 1 bytes @ 0x1F
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0x1F
  1274  003F                     	ds	4
  1275  0043                     LCD_display_value@buffer:
  1276                           
  1277                           ; 12 bytes @ 0x23
  1278  0043                     	ds	12
  1279  004F                     ??_main:
  1280                           
  1281                           ; 1 bytes @ 0x2F
  1282  004F                     	ds	2
  1283  0051                     main@refresh:
  1284                           
  1285                           ; 2 bytes @ 0x31
  1286  0051                     	ds	2
  1287                           
  1288                           	psect	maintext
  1289  04F0                     __pmaintext:	
  1290 ;;
  1291 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1292 ;;
  1293 ;; *************** function _main *****************
  1294 ;; Defined at:
  1295 ;;		line 49 in file "projY.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  refresh         2   49[BANK0 ] int 
  1300 ;;  tempCheck       2    0        int 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : B00/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1
  1310 ;;      Params:         0       0       0
  1311 ;;      Locals:         0       2       0
  1312 ;;      Temps:          0       2       0
  1313 ;;      Totals:         0       4       0
  1314 ;;Total ram usage:        4 bytes
  1315 ;; Hardware stack levels required when called: 7
  1316 ;; This function calls:
  1317 ;;		_ADC_initialise
  1318 ;;		_ADC_read
  1319 ;;		_GetThermistorTemp
  1320 ;;		_LCD_clear
  1321 ;;		_LCD_initialise
  1322 ;;		_compareTemp
  1323 ;;		_convrtDegree
  1324 ;;		_displaySetup
  1325 ;; This function is called by:
  1326 ;;		Startup code after reset
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330  04F0                     _main:	
  1331                           ;psect for function _main
  1332                           
  1333  04F0                     l2063:	
  1334                           ;incstack = 0
  1335                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1336                           
  1337                           
  1338                           ;projY.c: 53:     ANSEL = 0x00;
  1339  04F0  1683               	bsf	3,5	;RP0=1, select bank3
  1340  04F1  1703               	bsf	3,6	;RP1=1, select bank3
  1341  04F2  0188               	clrf	8	;volatile
  1342                           
  1343                           ;projY.c: 54:     ANSELH = 0x00;
  1344  04F3  0189               	clrf	9	;volatile
  1345                           
  1346                           ;projY.c: 55:     TRISC = 0x00;
  1347  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  1348  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  1349  04F6  0187               	clrf	7	;volatile
  1350                           
  1351                           ;projY.c: 56:     PORTC = 0x00;
  1352  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1353  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1354  04F9  0187               	clrf	7	;volatile
  1355  04FA                     l2065:
  1356                           
  1357                           ;projY.c: 57:     TRISB0 = 0x01;
  1358  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1359  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1360  04FC  1406               	bsf	6,0	;volatile
  1361  04FD                     l2067:
  1362                           
  1363                           ;projY.c: 58:     TRISB1 = 0x01;
  1364  04FD  1486               	bsf	6,1	;volatile
  1365                           
  1366                           ;projY.c: 59:     PORTB = 0x00;
  1367  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1368  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0500  0186               	clrf	6	;volatile
  1370  0501                     l2069:
  1371                           
  1372                           ;projY.c: 61:     OPTION_REGbits.T0CS = 0;
  1373  0501  1683               	bsf	3,5	;RP0=1, select bank1
  1374  0502  1303               	bcf	3,6	;RP1=0, select bank1
  1375  0503  1281               	bcf	1,5	;volatile
  1376  0504                     l2071:
  1377                           
  1378                           ;projY.c: 62:     OPTION_REGbits.PSA = 0;
  1379  0504  1181               	bcf	1,3	;volatile
  1380  0505                     l2073:
  1381                           
  1382                           ;projY.c: 63:     OPTION_REGbits.PS = 3;
  1383  0505  0801               	movf	1,w	;volatile
  1384  0506  39F8               	andlw	-8
  1385  0507  3803               	iorlw	3
  1386  0508  0081               	movwf	1	;volatile
  1387  0509                     l2075:
  1388                           
  1389                           ;projY.c: 65:     INTCONbits.RBIE = 1;
  1390  0509  158B               	bsf	11,3	;volatile
  1391  050A                     l2077:
  1392                           
  1393                           ;projY.c: 66:     INTCONbits.RBIF = 0;
  1394  050A  100B               	bcf	11,0	;volatile
  1395  050B                     l2079:
  1396                           
  1397                           ;projY.c: 67:     IOCBbits.IOCB = 1;
  1398  050B  3001               	movlw	1
  1399  050C  0096               	movwf	22	;volatile
  1400  050D                     l2081:
  1401                           
  1402                           ;projY.c: 68:     IOCBbits.IOCB1 = 1;
  1403  050D  1496               	bsf	22,1	;volatile
  1404  050E                     l2083:
  1405                           
  1406                           ;projY.c: 69:     INTCONbits.GIE = 1;
  1407  050E  178B               	bsf	11,7	;volatile
  1408  050F                     l2085:
  1409                           
  1410                           ;projY.c: 72:     LCD_initialise();
  1411  050F  2418               	fcall	_LCD_initialise
  1412  0510                     l2087:
  1413                           
  1414                           ;projY.c: 73:     ADC_initialise();
  1415  0510  271B               	fcall	_ADC_initialise
  1416  0511                     l2089:
  1417                           
  1418                           ;projY.c: 74:     temp = GetThermistorTemp(ADC_read());
  1419  0511  2775               	fcall	_ADC_read
  1420  0512  0874               	movf	?_ADC_read+1,w
  1421  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0515  00A1               	movwf	GetThermistorTemp@ADCValue+1
  1424  0516  0873               	movf	?_ADC_read,w
  1425  0517  00A0               	movwf	GetThermistorTemp@ADCValue
  1426  0518  25E1               	fcall	_GetThermistorTemp
  1427  0519  00F8               	movwf	_temp
  1428  051A  01F9               	clrf	_temp+1
  1429  051B  1BF8               	btfsc	_temp,7
  1430  051C  03F9               	decf	_temp+1,f
  1431  051D                     l2091:
  1432                           
  1433                           ;projY.c: 75:     int refresh = 0;
  1434  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1435  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1436  051F  01D1               	clrf	main@refresh
  1437  0520  01D2               	clrf	main@refresh+1
  1438  0521                     l2093:
  1439                           
  1440                           ;projY.c: 79:     {;projY.c: 80:     refresh = refresh + 1;
  1441  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0523  0851               	movf	main@refresh,w
  1444  0524  3E01               	addlw	1
  1445  0525  00D1               	movwf	main@refresh
  1446  0526  0852               	movf	main@refresh+1,w
  1447  0527  1803               	skipnc
  1448  0528  3E01               	addlw	1
  1449  0529  3E00               	addlw	0
  1450  052A  00D2               	movwf	main@refresh+1
  1451  052B                     l2095:
  1452                           
  1453                           ;projY.c: 81:     if(refresh%2==0)
  1454  052B  1851               	btfsc	main@refresh,0
  1455  052C  2D2E               	goto	u1531
  1456  052D  2D2F               	goto	u1530
  1457  052E                     u1531:
  1458  052E  2D30               	goto	l2099
  1459  052F                     u1530:
  1460  052F                     l2097:
  1461                           
  1462                           ;projY.c: 82:     {;projY.c: 83:         convrtDegree();
  1463  052F  25AD               	fcall	_convrtDegree
  1464  0530                     l2099:
  1465                           
  1466                           ;projY.c: 85:     if(count_Interrupt==1)
  1467  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0532  0358               	decf	_count_Interrupt,w
  1470  0533  0459               	iorwf	_count_Interrupt+1,w
  1471  0534  1D03               	btfss	3,2
  1472  0535  2D37               	goto	u1541
  1473  0536  2D38               	goto	u1540
  1474  0537                     u1541:
  1475  0537  2D3D               	goto	l2105
  1476  0538                     u1540:
  1477  0538                     l2101:
  1478                           
  1479                           ;projY.c: 86:     {;projY.c: 87:         LCD_clear();
  1480  0538  26C0               	fcall	_LCD_clear
  1481  0539                     l2103:
  1482                           
  1483                           ;projY.c: 88:         count_Interrupt=0;
  1484  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1485  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1486  053B  01D8               	clrf	_count_Interrupt
  1487  053C  01D9               	clrf	_count_Interrupt+1
  1488  053D                     l2105:
  1489                           
  1490                           ;projY.c: 90:     compareTemp();
  1491  053D  2611               	fcall	_compareTemp
  1492  053E                     l2107:
  1493                           
  1494                           ;projY.c: 91:     displaySetup();
  1495  053E  23A7               	fcall	_displaySetup
  1496  053F                     l2109:
  1497                           
  1498                           ;projY.c: 92:     _delay((unsigned long)((1000)*(1000/4000.0)));
  1499  053F  3052               	movlw	82
  1500  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0542  00CF               	movwf	??_main
  1503  0543                     u1597:
  1504  0543  0BCF               	decfsz	??_main,f
  1505  0544  2D43               	goto	u1597
  1506  0545  2D46               	nop2
  1507  0546                     l2111:
  1508                           
  1509                           ;projY.c: 93:     if(refresh%8==0)
  1510  0546  3007               	movlw	7
  1511  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0549  0551               	andwf	main@refresh,w
  1514  054A  00CF               	movwf	??_main
  1515  054B  3000               	movlw	0
  1516  054C  0552               	andwf	main@refresh+1,w
  1517  054D  00D0               	movwf	??_main+1
  1518  054E  084F               	movf	??_main,w
  1519  054F  0450               	iorwf	??_main+1,w
  1520  0550  1D03               	btfss	3,2
  1521  0551  2D53               	goto	u1551
  1522  0552  2D54               	goto	u1550
  1523  0553                     u1551:
  1524  0553  2D21               	goto	l2093
  1525  0554                     u1550:
  1526  0554                     l2113:
  1527                           
  1528                           ;projY.c: 94:     {;projY.c: 95:         LCD_clear();
  1529  0554  26C0               	fcall	_LCD_clear
  1530  0555  2D21               	goto	l2093
  1531  0556  280A               	ljmp	start
  1532  0557                     __end_of_main:
  1533                           
  1534                           	psect	text1
  1535  03A7                     __ptext1:	
  1536 ;; *************** function _displaySetup *****************
  1537 ;; Defined at:
  1538 ;;		line 141 in file "projY.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1
  1552 ;;      Params:         0       0       0
  1553 ;;      Locals:         0       0       0
  1554 ;;      Temps:          0       0       0
  1555 ;;      Totals:         0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 6
  1559 ;; This function calls:
  1560 ;;		_ADC_channel_select
  1561 ;;		_LCD_cursor
  1562 ;;		_LCD_display_value
  1563 ;;		_LCD_putch
  1564 ;;		_LCD_puts
  1565 ;;		_mv_Right
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571  03A7                     _displaySetup:	
  1572                           ;psect for function _displaySetup
  1573                           
  1574  03A7                     l2033:	
  1575                           ;incstack = 0
  1576                           ; Regs used in _displaySetup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1577                           
  1578                           
  1579                           ;projY.c: 143:     LCD_cursor(0,0);
  1580  03A7  01F5               	clrf	LCD_cursor@y
  1581  03A8  3000               	movlw	0
  1582  03A9  278A               	fcall	_LCD_cursor
  1583  03AA                     l2035:
  1584                           
  1585                           ;projY.c: 144:     LCD_puts(myString1);
  1586  03AA  307D               	movlw	low (_myString1| (0+32768))
  1587  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1588  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1589  03AD  00A7               	movwf	LCD_puts@s
  1590  03AE  3082               	movlw	high (_myString1| (0+32768))
  1591  03AF  00A8               	movwf	LCD_puts@s+1
  1592  03B0  266A               	fcall	_LCD_puts
  1593  03B1                     l2037:
  1594                           
  1595                           ;projY.c: 145:     LCD_cursor(5,0);
  1596  03B1  01F5               	clrf	LCD_cursor@y
  1597  03B2  3005               	movlw	5
  1598  03B3  278A               	fcall	_LCD_cursor
  1599  03B4                     l2039:
  1600                           
  1601                           ;projY.c: 146:     mv_Right(temp);
  1602  03B4  0879               	movf	_temp+1,w
  1603  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1604  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1605  03B7  00A8               	movwf	mv_Right@a+1
  1606  03B8  0878               	movf	_temp,w
  1607  03B9  00A7               	movwf	mv_Right@a
  1608  03BA  2760               	fcall	_mv_Right
  1609  03BB                     l2041:
  1610                           
  1611                           ;projY.c: 147:     ADC_channel_select(11);
  1612  03BB  300B               	movlw	11
  1613  03BC  279E               	fcall	_ADC_channel_select
  1614  03BD                     l2043:
  1615                           
  1616                           ;projY.c: 148:     LCD_display_value(temp);
  1617  03BD  0878               	movf	_temp,w
  1618  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1619  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1620  03C0  00BF               	movwf	LCD_display_value@value
  1621  03C1  0879               	movf	_temp+1,w
  1622  03C2  00C0               	movwf	LCD_display_value@value+1
  1623  03C3  3000               	movlw	0
  1624  03C4  1BC0               	btfsc	LCD_display_value@value+1,7
  1625  03C5  30FF               	movlw	255
  1626  03C6  00C1               	movwf	LCD_display_value@value+2
  1627  03C7  00C2               	movwf	LCD_display_value@value+3
  1628  03C8  2703               	fcall	_LCD_display_value
  1629  03C9                     l2045:
  1630                           
  1631                           ;projY.c: 149:     if(temp!=-99)
  1632  03C9  309D               	movlw	157
  1633  03CA  0678               	xorwf	_temp,w
  1634  03CB  1D03               	skipz
  1635  03CC  2BD2               	goto	u1520
  1636  03CD  0A79               	incf	_temp+1,w
  1637  03CE  1903               	btfsc	3,2
  1638  03CF  2BD1               	goto	u1521
  1639  03D0  2BD2               	goto	u1520
  1640  03D1                     u1521:
  1641  03D1  2BD6               	goto	l100
  1642  03D2                     u1520:
  1643  03D2                     l2047:
  1644                           
  1645                           ;projY.c: 150:     {;projY.c: 151:     LCD_putch('.');
  1646  03D2  302E               	movlw	46
  1647  03D3  2733               	fcall	_LCD_putch
  1648                           
  1649                           ;projY.c: 152:     LCD_putch('0');
  1650  03D4  3030               	movlw	48
  1651  03D5  2733               	fcall	_LCD_putch
  1652  03D6                     l100:	
  1653                           ;projY.c: 153:     }
  1654                           
  1655                           
  1656                           ;projY.c: 155:     LCD_cursor(10,0);
  1657  03D6  01F5               	clrf	LCD_cursor@y
  1658  03D7  300A               	movlw	10
  1659  03D8  278A               	fcall	_LCD_cursor
  1660  03D9                     l2049:
  1661                           
  1662                           ;projY.c: 156:     LCD_puts(" deg ");
  1663  03D9  308D               	movlw	low (STR_1| (0+32768))
  1664  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1665  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1666  03DC  00A7               	movwf	LCD_puts@s
  1667  03DD  3082               	movlw	high (STR_1| (0+32768))
  1668  03DE  00A8               	movwf	LCD_puts@s+1
  1669  03DF  266A               	fcall	_LCD_puts
  1670  03E0                     l2051:
  1671                           
  1672                           ;projY.c: 157:     LCD_cursor(15,0);
  1673  03E0  01F5               	clrf	LCD_cursor@y
  1674  03E1  300F               	movlw	15
  1675  03E2  278A               	fcall	_LCD_cursor
  1676  03E3                     l2053:
  1677                           
  1678                           ;projY.c: 158:     LCD_putch(Degree);
  1679  03E3  087A               	movf	_Degree,w
  1680  03E4  2733               	fcall	_LCD_putch
  1681  03E5                     l2055:
  1682                           
  1683                           ;projY.c: 159:     LCD_cursor(0,1);
  1684  03E5  01F5               	clrf	LCD_cursor@y
  1685  03E6  0AF5               	incf	LCD_cursor@y,f
  1686  03E7  3000               	movlw	0
  1687  03E8  278A               	fcall	_LCD_cursor
  1688                           
  1689                           ;projY.c: 160:     LCD_puts(myString2);
  1690  03E9  3088               	movlw	low (_myString2| (0+32768))
  1691  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1692  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1693  03EC  00A7               	movwf	LCD_puts@s
  1694  03ED  3082               	movlw	high (_myString2| (0+32768))
  1695  03EE  00A8               	movwf	LCD_puts@s+1
  1696  03EF  266A               	fcall	_LCD_puts
  1697                           
  1698                           ;projY.c: 161:     LCD_display_value(tempMin);
  1699  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1700  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1701  03F2  0855               	movf	_tempMin,w
  1702  03F3  00BF               	movwf	LCD_display_value@value
  1703  03F4  0856               	movf	_tempMin+1,w
  1704  03F5  00C0               	movwf	LCD_display_value@value+1
  1705  03F6  3000               	movlw	0
  1706  03F7  1BC0               	btfsc	LCD_display_value@value+1,7
  1707  03F8  30FF               	movlw	255
  1708  03F9  00C1               	movwf	LCD_display_value@value+2
  1709  03FA  00C2               	movwf	LCD_display_value@value+3
  1710  03FB  2703               	fcall	_LCD_display_value
  1711  03FC                     l2057:
  1712                           
  1713                           ;projY.c: 162:     LCD_cursor(9,1);
  1714  03FC  01F5               	clrf	LCD_cursor@y
  1715  03FD  0AF5               	incf	LCD_cursor@y,f
  1716  03FE  3009               	movlw	9
  1717  03FF  278A               	fcall	_LCD_cursor
  1718  0400                     l2059:
  1719                           
  1720                           ;projY.c: 163:     LCD_puts(myString3);
  1721  0400  3083               	movlw	low (_myString3| (0+32768))
  1722  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0403  00A7               	movwf	LCD_puts@s
  1725  0404  3082               	movlw	high (_myString3| (0+32768))
  1726  0405  00A8               	movwf	LCD_puts@s+1
  1727  0406  266A               	fcall	_LCD_puts
  1728                           
  1729                           ;projY.c: 164:     LCD_cursor(13,1);
  1730  0407  01F5               	clrf	LCD_cursor@y
  1731  0408  0AF5               	incf	LCD_cursor@y,f
  1732  0409  300D               	movlw	13
  1733  040A  278A               	fcall	_LCD_cursor
  1734  040B                     l2061:
  1735                           
  1736                           ;projY.c: 165:     LCD_display_value(tempMax);
  1737  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1738  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1739  040D  0853               	movf	_tempMax,w
  1740  040E  00BF               	movwf	LCD_display_value@value
  1741  040F  0854               	movf	_tempMax+1,w
  1742  0410  00C0               	movwf	LCD_display_value@value+1
  1743  0411  3000               	movlw	0
  1744  0412  1BC0               	btfsc	LCD_display_value@value+1,7
  1745  0413  30FF               	movlw	255
  1746  0414  00C1               	movwf	LCD_display_value@value+2
  1747  0415  00C2               	movwf	LCD_display_value@value+3
  1748  0416  2703               	fcall	_LCD_display_value
  1749  0417                     l101:
  1750  0417  0008               	return
  1751  0418                     __end_of_displaySetup:
  1752                           
  1753                           	psect	text2
  1754  0760                     __ptext2:	
  1755 ;; *************** function _mv_Right *****************
  1756 ;; Defined at:
  1757 ;;		line 112 in file "projY.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  a               2    7[BANK0 ] int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1
  1771 ;;      Params:         0       2       0
  1772 ;;      Locals:         0       0       0
  1773 ;;      Temps:          0       0       0
  1774 ;;      Totals:         0       2       0
  1775 ;;Total ram usage:        2 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 4
  1778 ;; This function calls:
  1779 ;;		_LCD_cursor
  1780 ;;		_LCD_putch
  1781 ;; This function is called by:
  1782 ;;		_displaySetup
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786  0760                     _mv_Right:	
  1787                           ;psect for function _mv_Right
  1788                           
  1789  0760                     l1961:	
  1790                           ;incstack = 0
  1791                           ; Regs used in _mv_Right: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1792                           
  1793                           
  1794                           ;projY.c: 112: void mv_Right(int a);projY.c: 113: {;projY.c: 114:     if(a<10)
  1795  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0762  0828               	movf	mv_Right@a+1,w
  1798  0763  3A80               	xorlw	128
  1799  0764  00FF               	movwf	btemp+1
  1800  0765  3080               	movlw	128
  1801  0766  027F               	subwf	btemp+1,w
  1802  0767  1D03               	skipz
  1803  0768  2F6B               	goto	u1445
  1804  0769  300A               	movlw	10
  1805  076A  0227               	subwf	mv_Right@a,w
  1806  076B                     u1445:
  1807  076B  1803               	skipnc
  1808  076C  2F6E               	goto	u1441
  1809  076D  2F6F               	goto	u1440
  1810  076E                     u1441:
  1811  076E  2F74               	goto	l87
  1812  076F                     u1440:
  1813  076F                     l1963:
  1814                           
  1815                           ;projY.c: 115:     {;projY.c: 116:     LCD_cursor(5,0);
  1816  076F  01F5               	clrf	LCD_cursor@y
  1817  0770  3005               	movlw	5
  1818  0771  278A               	fcall	_LCD_cursor
  1819                           
  1820                           ;projY.c: 117:     LCD_putch(' ');
  1821  0772  3020               	movlw	32
  1822  0773  2733               	fcall	_LCD_putch
  1823  0774                     l87:
  1824  0774  0008               	return
  1825  0775                     __end_of_mv_Right:
  1826                           
  1827                           	psect	text3
  1828  078A                     __ptext3:	
  1829 ;; *************** function _LCD_cursor *****************
  1830 ;; Defined at:
  1831 ;;		line 178 in file "LCDdrive882.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  x               1    wreg     unsigned char 
  1834 ;;  y               1    5[COMMON] unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  x               1    7[COMMON] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1
  1846 ;;      Params:         1       0       0
  1847 ;;      Locals:         1       0       0
  1848 ;;      Temps:          1       0       0
  1849 ;;      Totals:         3       0       0
  1850 ;;Total ram usage:        3 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 3
  1853 ;; This function calls:
  1854 ;;		_LCD_write
  1855 ;; This function is called by:
  1856 ;;		_mv_Right
  1857 ;;		_displaySetup
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861  078A                     _LCD_cursor:	
  1862                           ;psect for function _LCD_cursor
  1863                           
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _LCD_cursor: [wreg+status,2+status,0+pclath+cstack]
  1867                           ;LCD_cursor@x stored from wreg
  1868  078A  00F7               	movwf	LCD_cursor@x
  1869  078B                     l1881:
  1870                           
  1871                           ;LCDdrive882.c: 178: void LCD_cursor (unsigned char x, unsigned char y );LCDdrive882.c: 
      +                          179: {;LCDdrive882.c: 180:     if ( y==0 )
  1872  078B  0875               	movf	LCD_cursor@y,w
  1873  078C  1D03               	btfss	3,2
  1874  078D  2F8F               	goto	u1351
  1875  078E  2F90               	goto	u1350
  1876  078F                     u1351:
  1877  078F  2F95               	goto	l1885
  1878  0790                     u1350:
  1879  0790                     l1883:
  1880                           
  1881                           ;LCDdrive882.c: 181:     {;LCDdrive882.c: 183:         y=0x80 ;
  1882  0790  3080               	movlw	128
  1883  0791  00F6               	movwf	??_LCD_cursor
  1884  0792  0876               	movf	??_LCD_cursor,w
  1885  0793  00F5               	movwf	LCD_cursor@y
  1886                           
  1887                           ;LCDdrive882.c: 184:     }
  1888  0794  2F99               	goto	l1887
  1889  0795                     l1885:
  1890                           
  1891                           ;LCDdrive882.c: 186:     {;LCDdrive882.c: 188:         y=0xc0 ;
  1892  0795  30C0               	movlw	192
  1893  0796  00F6               	movwf	??_LCD_cursor
  1894  0797  0876               	movf	??_LCD_cursor,w
  1895  0798  00F5               	movwf	LCD_cursor@y
  1896  0799                     l1887:
  1897                           
  1898                           ;LCDdrive882.c: 191:     LCD_write( y+x, 0) ;
  1899  0799  01F3               	clrf	LCD_write@rs
  1900  079A  0877               	movf	LCD_cursor@x,w
  1901  079B  0775               	addwf	LCD_cursor@y,w
  1902  079C  2320               	fcall	_LCD_write
  1903  079D                     l221:
  1904  079D  0008               	return
  1905  079E                     __end_of_LCD_cursor:
  1906                           
  1907                           	psect	text4
  1908  0703                     __ptext4:	
  1909 ;; *************** function _LCD_display_value *****************
  1910 ;; Defined at:
  1911 ;;		line 204 in file "LCDdrive882.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  value           4   31[BANK0 ] long 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  buffer         12   35[BANK0 ] unsigned char [12]
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1
  1925 ;;      Params:         0       4       0
  1926 ;;      Locals:         0      12       0
  1927 ;;      Temps:          0       0       0
  1928 ;;      Totals:         0      16       0
  1929 ;;Total ram usage:       16 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 5
  1932 ;; This function calls:
  1933 ;;		_LCD_puts
  1934 ;;		_ltoa
  1935 ;; This function is called by:
  1936 ;;		_displaySetup
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940  0703                     _LCD_display_value:	
  1941                           ;psect for function _LCD_display_value
  1942                           
  1943  0703                     l1965:	
  1944                           ;incstack = 0
  1945                           ; Regs used in _LCD_display_value: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1946                           
  1947                           
  1948                           ;LCDdrive882.c: 204: void LCD_display_value (long value);LCDdrive882.c: 205: {;LCDdrive8
      +                          82.c: 206:     char buffer[12];;LCDdrive882.c: 208:     ltoa(buffer, value, 10);
  1949  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0705  0842               	movf	LCD_display_value@value+3,w
  1952  0706  00BC               	movwf	ltoa@val+3
  1953  0707  0841               	movf	LCD_display_value@value+2,w
  1954  0708  00BB               	movwf	ltoa@val+2
  1955  0709  0840               	movf	LCD_display_value@value+1,w
  1956  070A  00BA               	movwf	ltoa@val+1
  1957  070B  083F               	movf	LCD_display_value@value,w
  1958  070C  00B9               	movwf	ltoa@val
  1959  070D  300A               	movlw	10
  1960  070E  00BD               	movwf	ltoa@base
  1961  070F  3000               	movlw	0
  1962  0710  00BE               	movwf	ltoa@base+1
  1963  0711  3043               	movlw	(low (LCD_display_value@buffer| 0))& (0+255)
  1964  0712  263E               	fcall	_ltoa
  1965  0713                     l1967:
  1966                           
  1967                           ;LCDdrive882.c: 209:     LCD_puts(buffer);
  1968  0713  3043               	movlw	(low (LCD_display_value@buffer| 0))& (0+255)
  1969  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0716  00A7               	movwf	LCD_puts@s
  1972  0717  3000               	movlw	0
  1973  0718  00A8               	movwf	LCD_puts@s+1
  1974  0719  266A               	fcall	_LCD_puts
  1975  071A                     l230:
  1976  071A  0008               	return
  1977  071B                     __end_of_LCD_display_value:
  1978                           
  1979                           	psect	text5
  1980  063E                     __ptext5:	
  1981 ;; *************** function _ltoa *****************
  1982 ;; Defined at:
  1983 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ltoa.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  buf             1    wreg     PTR unsigned char 
  1986 ;;		 -> LCD_display_value@buffer(12), 
  1987 ;;  val             4   25[BANK0 ] long 
  1988 ;;  base            2   29[BANK0 ] int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  buf             1    7[COMMON] PTR unsigned char 
  1991 ;;		 -> LCD_display_value@buffer(12), 
  1992 ;;  cp              1    0        PTR unsigned char 
  1993 ;;		 -> LCD_display_value@buffer(12), 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      PTR unsigned char 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1
  2003 ;;      Params:         0       6       0
  2004 ;;      Locals:         1       0       0
  2005 ;;      Temps:          1       0       0
  2006 ;;      Totals:         2       6       0
  2007 ;;Total ram usage:        8 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 4
  2010 ;; This function calls:
  2011 ;;		_ultoa
  2012 ;; This function is called by:
  2013 ;;		_LCD_display_value
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017  063E                     _ltoa:	
  2018                           ;psect for function _ltoa
  2019                           
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _ltoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2023                           ;ltoa@buf stored from wreg
  2024  063E  00F7               	movwf	ltoa@buf
  2025  063F                     l1905:
  2026  063F                     l1907:
  2027  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0641  1FBC               	btfss	ltoa@val+3,7
  2030  0642  2E44               	goto	u1391
  2031  0643  2E45               	goto	u1390
  2032  0644                     u1391:
  2033  0644  2E5B               	goto	l1915
  2034  0645                     u1390:
  2035  0645                     l1909:
  2036  0645  302D               	movlw	45
  2037  0646  00F6               	movwf	??_ltoa
  2038  0647  0877               	movf	ltoa@buf,w
  2039  0648  0084               	movwf	4
  2040  0649  0876               	movf	??_ltoa,w
  2041  064A  1383               	bcf	3,7	;select IRP bank0
  2042  064B  0080               	movwf	0
  2043  064C                     l1911:
  2044  064C  3001               	movlw	1
  2045  064D  00F6               	movwf	??_ltoa
  2046  064E  0876               	movf	??_ltoa,w
  2047  064F  07F7               	addwf	ltoa@buf,f
  2048  0650                     l1913:
  2049  0650  09B9               	comf	ltoa@val,f
  2050  0651  09BA               	comf	ltoa@val+1,f
  2051  0652  09BB               	comf	ltoa@val+2,f
  2052  0653  09BC               	comf	ltoa@val+3,f
  2053  0654  0AB9               	incf	ltoa@val,f
  2054  0655  1903               	skipnz
  2055  0656  0ABA               	incf	ltoa@val+1,f
  2056  0657  1903               	skipnz
  2057  0658  0ABB               	incf	ltoa@val+2,f
  2058  0659  1903               	skipnz
  2059  065A  0ABC               	incf	ltoa@val+3,f
  2060  065B                     l1915:
  2061  065B  083C               	movf	ltoa@val+3,w
  2062  065C  00B0               	movwf	ultoa@val+3
  2063  065D  083B               	movf	ltoa@val+2,w
  2064  065E  00AF               	movwf	ultoa@val+2
  2065  065F  083A               	movf	ltoa@val+1,w
  2066  0660  00AE               	movwf	ultoa@val+1
  2067  0661  0839               	movf	ltoa@val,w
  2068  0662  00AD               	movwf	ultoa@val
  2069  0663  083E               	movf	ltoa@base+1,w
  2070  0664  00B2               	movwf	ultoa@base+1
  2071  0665  083D               	movf	ltoa@base,w
  2072  0666  00B1               	movwf	ultoa@base
  2073  0667  0877               	movf	ltoa@buf,w
  2074  0668  2293               	fcall	_ultoa
  2075  0669                     l783:
  2076  0669  0008               	return
  2077  066A                     __end_of_ltoa:
  2078                           
  2079                           	psect	text6
  2080  0293                     __ptext6:	
  2081 ;; *************** function _ultoa *****************
  2082 ;; Defined at:
  2083 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ltoa.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  buf             1    wreg     PTR unsigned char 
  2086 ;;		 -> LCD_display_value@buffer(12), 
  2087 ;;  val             4   13[BANK0 ] unsigned long 
  2088 ;;  base            2   17[BANK0 ] int 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  buf             1   24[BANK0 ] PTR unsigned char 
  2091 ;;		 -> LCD_display_value@buffer(12), 
  2092 ;;  v               4   19[BANK0 ] unsigned long 
  2093 ;;  c               1   23[BANK0 ] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      PTR unsigned char 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1
  2103 ;;      Params:         0       6       0
  2104 ;;      Locals:         0       6       0
  2105 ;;      Temps:          1       0       0
  2106 ;;      Totals:         1      12       0
  2107 ;;Total ram usage:       13 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 3
  2110 ;; This function calls:
  2111 ;;		___lldiv
  2112 ;;		___llmod
  2113 ;; This function is called by:
  2114 ;;		_ltoa
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118  0293                     _ultoa:	
  2119                           ;psect for function _ultoa
  2120                           
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2124                           ;ultoa@buf stored from wreg
  2125  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0295  00B8               	movwf	ultoa@buf
  2128  0296                     l1855:
  2129  0296  0830               	movf	ultoa@val+3,w
  2130  0297  00B6               	movwf	ultoa@v+3
  2131  0298  082F               	movf	ultoa@val+2,w
  2132  0299  00B5               	movwf	ultoa@v+2
  2133  029A  082E               	movf	ultoa@val+1,w
  2134  029B  00B4               	movwf	ultoa@v+1
  2135  029C  082D               	movf	ultoa@val,w
  2136  029D  00B3               	movwf	ultoa@v
  2137  029E                     l1857:
  2138  029E  0831               	movf	ultoa@base,w
  2139  029F  00A0               	movwf	___lldiv@divisor
  2140  02A0  0832               	movf	ultoa@base+1,w
  2141  02A1  00A1               	movwf	___lldiv@divisor+1
  2142  02A2  3000               	movlw	0
  2143  02A3  1BA1               	btfsc	___lldiv@divisor+1,7
  2144  02A4  30FF               	movlw	255
  2145  02A5  00A2               	movwf	___lldiv@divisor+2
  2146  02A6  00A3               	movwf	___lldiv@divisor+3
  2147  02A7  0836               	movf	ultoa@v+3,w
  2148  02A8  00A7               	movwf	___lldiv@dividend+3
  2149  02A9  0835               	movf	ultoa@v+2,w
  2150  02AA  00A6               	movwf	___lldiv@dividend+2
  2151  02AB  0834               	movf	ultoa@v+1,w
  2152  02AC  00A5               	movwf	___lldiv@dividend+1
  2153  02AD  0833               	movf	ultoa@v,w
  2154  02AE  00A4               	movwf	___lldiv@dividend
  2155  02AF  2488               	fcall	___lldiv
  2156  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2157  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2158  02B2  0823               	movf	?___lldiv+3,w
  2159  02B3  00B6               	movwf	ultoa@v+3
  2160  02B4  0822               	movf	?___lldiv+2,w
  2161  02B5  00B5               	movwf	ultoa@v+2
  2162  02B6  0821               	movf	?___lldiv+1,w
  2163  02B7  00B4               	movwf	ultoa@v+1
  2164  02B8  0820               	movf	?___lldiv,w
  2165  02B9  00B3               	movwf	ultoa@v
  2166  02BA                     l1859:
  2167  02BA  3001               	movlw	1
  2168  02BB  00F5               	movwf	??_ultoa
  2169  02BC  0875               	movf	??_ultoa,w
  2170  02BD  07B8               	addwf	ultoa@buf,f
  2171  02BE                     l1861:
  2172  02BE  0836               	movf	ultoa@v+3,w
  2173  02BF  0435               	iorwf	ultoa@v+2,w
  2174  02C0  0434               	iorwf	ultoa@v+1,w
  2175  02C1  0433               	iorwf	ultoa@v,w
  2176  02C2  1D03               	skipz
  2177  02C3  2AC5               	goto	u1321
  2178  02C4  2AC6               	goto	u1320
  2179  02C5                     u1321:
  2180  02C5  2A9E               	goto	l1857
  2181  02C6                     u1320:
  2182  02C6                     l1863:
  2183  02C6  0838               	movf	ultoa@buf,w
  2184  02C7  0084               	movwf	4
  2185  02C8  1383               	bcf	3,7	;select IRP bank0
  2186  02C9  0180               	clrf	0
  2187  02CA                     l1865:
  2188  02CA  3001               	movlw	1
  2189  02CB  02B8               	subwf	ultoa@buf,f
  2190  02CC                     l1867:
  2191  02CC  0831               	movf	ultoa@base,w
  2192  02CD  00A0               	movwf	___llmod@divisor
  2193  02CE  0832               	movf	ultoa@base+1,w
  2194  02CF  00A1               	movwf	___llmod@divisor+1
  2195  02D0  3000               	movlw	0
  2196  02D1  1BA1               	btfsc	___llmod@divisor+1,7
  2197  02D2  30FF               	movlw	255
  2198  02D3  00A2               	movwf	___llmod@divisor+2
  2199  02D4  00A3               	movwf	___llmod@divisor+3
  2200  02D5  0830               	movf	ultoa@val+3,w
  2201  02D6  00A7               	movwf	___llmod@dividend+3
  2202  02D7  082F               	movf	ultoa@val+2,w
  2203  02D8  00A6               	movwf	___llmod@dividend+2
  2204  02D9  082E               	movf	ultoa@val+1,w
  2205  02DA  00A5               	movwf	___llmod@dividend+1
  2206  02DB  082D               	movf	ultoa@val,w
  2207  02DC  00A4               	movwf	___llmod@dividend
  2208  02DD  2557               	fcall	___llmod
  2209  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2210  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2211  02E0  0820               	movf	?___llmod,w
  2212  02E1  00F5               	movwf	??_ultoa
  2213  02E2  0875               	movf	??_ultoa,w
  2214  02E3  00B7               	movwf	ultoa@c
  2215  02E4                     l1869:
  2216  02E4  0831               	movf	ultoa@base,w
  2217  02E5  00A0               	movwf	___lldiv@divisor
  2218  02E6  0832               	movf	ultoa@base+1,w
  2219  02E7  00A1               	movwf	___lldiv@divisor+1
  2220  02E8  3000               	movlw	0
  2221  02E9  1BA1               	btfsc	___lldiv@divisor+1,7
  2222  02EA  30FF               	movlw	255
  2223  02EB  00A2               	movwf	___lldiv@divisor+2
  2224  02EC  00A3               	movwf	___lldiv@divisor+3
  2225  02ED  0830               	movf	ultoa@val+3,w
  2226  02EE  00A7               	movwf	___lldiv@dividend+3
  2227  02EF  082F               	movf	ultoa@val+2,w
  2228  02F0  00A6               	movwf	___lldiv@dividend+2
  2229  02F1  082E               	movf	ultoa@val+1,w
  2230  02F2  00A5               	movwf	___lldiv@dividend+1
  2231  02F3  082D               	movf	ultoa@val,w
  2232  02F4  00A4               	movwf	___lldiv@dividend
  2233  02F5  2488               	fcall	___lldiv
  2234  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2235  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2236  02F8  0823               	movf	?___lldiv+3,w
  2237  02F9  00B0               	movwf	ultoa@val+3
  2238  02FA  0822               	movf	?___lldiv+2,w
  2239  02FB  00AF               	movwf	ultoa@val+2
  2240  02FC  0821               	movf	?___lldiv+1,w
  2241  02FD  00AE               	movwf	ultoa@val+1
  2242  02FE  0820               	movf	?___lldiv,w
  2243  02FF  00AD               	movwf	ultoa@val
  2244  0300                     l1871:
  2245  0300  300A               	movlw	10
  2246  0301  0237               	subwf	ultoa@c,w
  2247  0302  1C03               	skipc
  2248  0303  2B05               	goto	u1331
  2249  0304  2B06               	goto	u1330
  2250  0305                     u1331:
  2251  0305  2B0A               	goto	l789
  2252  0306                     u1330:
  2253  0306                     l1873:
  2254  0306  3007               	movlw	7
  2255  0307  00F5               	movwf	??_ultoa
  2256  0308  0875               	movf	??_ultoa,w
  2257  0309  07B7               	addwf	ultoa@c,f
  2258  030A                     l789:
  2259  030A  3030               	movlw	48
  2260  030B  00F5               	movwf	??_ultoa
  2261  030C  0875               	movf	??_ultoa,w
  2262  030D  07B7               	addwf	ultoa@c,f
  2263  030E                     l1875:
  2264  030E  0837               	movf	ultoa@c,w
  2265  030F  00F5               	movwf	??_ultoa
  2266  0310  0838               	movf	ultoa@buf,w
  2267  0311  0084               	movwf	4
  2268  0312  0875               	movf	??_ultoa,w
  2269  0313  1383               	bcf	3,7	;select IRP bank0
  2270  0314  0080               	movwf	0
  2271  0315                     l1877:
  2272  0315  3001               	movlw	1
  2273  0316  02B8               	subwf	ultoa@buf,f
  2274  0317                     l1879:
  2275  0317  0830               	movf	ultoa@val+3,w
  2276  0318  042F               	iorwf	ultoa@val+2,w
  2277  0319  042E               	iorwf	ultoa@val+1,w
  2278  031A  042D               	iorwf	ultoa@val,w
  2279  031B  1D03               	skipz
  2280  031C  2B1E               	goto	u1341
  2281  031D  2B1F               	goto	u1340
  2282  031E                     u1341:
  2283  031E  2ACC               	goto	l1867
  2284  031F                     u1340:
  2285  031F                     l791:
  2286  031F  0008               	return
  2287  0320                     __end_of_ultoa:
  2288                           
  2289                           	psect	text7
  2290  0557                     __ptext7:	
  2291 ;; *************** function ___llmod *****************
  2292 ;; Defined at:
  2293 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  divisor         4    0[BANK0 ] unsigned long 
  2296 ;;  dividend        4    4[BANK0 ] unsigned long 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  counter         1    4[COMMON] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  4    0[BANK0 ] unsigned long 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1
  2308 ;;      Params:         0       8       0
  2309 ;;      Locals:         1       0       0
  2310 ;;      Temps:          1       0       0
  2311 ;;      Totals:         2       8       0
  2312 ;;Total ram usage:       10 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 2
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_ultoa
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322  0557                     ___llmod:	
  2323                           ;psect for function ___llmod
  2324                           
  2325  0557                     l1825:	
  2326                           ;incstack = 0
  2327                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2328                           
  2329  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0559  0823               	movf	___llmod@divisor+3,w
  2332  055A  0422               	iorwf	___llmod@divisor+2,w
  2333  055B  0421               	iorwf	___llmod@divisor+1,w
  2334  055C  0420               	iorwf	___llmod@divisor,w
  2335  055D  1903               	skipnz
  2336  055E  2D60               	goto	u1251
  2337  055F  2D61               	goto	u1250
  2338  0560                     u1251:
  2339  0560  2DA4               	goto	l1841
  2340  0561                     u1250:
  2341  0561                     l1827:
  2342  0561  01F4               	clrf	___llmod@counter
  2343  0562  0AF4               	incf	___llmod@counter,f
  2344  0563  2D71               	goto	l1831
  2345  0564                     l1829:
  2346  0564  3001               	movlw	1
  2347  0565  00F3               	movwf	??___llmod
  2348  0566                     u1265:
  2349  0566  1003               	clrc
  2350  0567  0DA0               	rlf	___llmod@divisor,f
  2351  0568  0DA1               	rlf	___llmod@divisor+1,f
  2352  0569  0DA2               	rlf	___llmod@divisor+2,f
  2353  056A  0DA3               	rlf	___llmod@divisor+3,f
  2354  056B  0BF3               	decfsz	??___llmod,f
  2355  056C  2D66               	goto	u1265
  2356  056D  3001               	movlw	1
  2357  056E  00F3               	movwf	??___llmod
  2358  056F  0873               	movf	??___llmod,w
  2359  0570  07F4               	addwf	___llmod@counter,f
  2360  0571                     l1831:
  2361  0571  1FA3               	btfss	___llmod@divisor+3,7
  2362  0572  2D74               	goto	u1271
  2363  0573  2D75               	goto	u1270
  2364  0574                     u1271:
  2365  0574  2D64               	goto	l1829
  2366  0575                     u1270:
  2367  0575                     l1833:
  2368  0575  0823               	movf	___llmod@divisor+3,w
  2369  0576  0227               	subwf	___llmod@dividend+3,w
  2370  0577  1D03               	skipz
  2371  0578  2D83               	goto	u1285
  2372  0579  0822               	movf	___llmod@divisor+2,w
  2373  057A  0226               	subwf	___llmod@dividend+2,w
  2374  057B  1D03               	skipz
  2375  057C  2D83               	goto	u1285
  2376  057D  0821               	movf	___llmod@divisor+1,w
  2377  057E  0225               	subwf	___llmod@dividend+1,w
  2378  057F  1D03               	skipz
  2379  0580  2D83               	goto	u1285
  2380  0581  0820               	movf	___llmod@divisor,w
  2381  0582  0224               	subwf	___llmod@dividend,w
  2382  0583                     u1285:
  2383  0583  1C03               	skipc
  2384  0584  2D86               	goto	u1281
  2385  0585  2D87               	goto	u1280
  2386  0586                     u1281:
  2387  0586  2D95               	goto	l1837
  2388  0587                     u1280:
  2389  0587                     l1835:
  2390  0587  0820               	movf	___llmod@divisor,w
  2391  0588  02A4               	subwf	___llmod@dividend,f
  2392  0589  0821               	movf	___llmod@divisor+1,w
  2393  058A  1C03               	skipc
  2394  058B  0F21               	incfsz	___llmod@divisor+1,w
  2395  058C  02A5               	subwf	___llmod@dividend+1,f
  2396  058D  0822               	movf	___llmod@divisor+2,w
  2397  058E  1C03               	skipc
  2398  058F  0F22               	incfsz	___llmod@divisor+2,w
  2399  0590  02A6               	subwf	___llmod@dividend+2,f
  2400  0591  0823               	movf	___llmod@divisor+3,w
  2401  0592  1C03               	skipc
  2402  0593  0F23               	incfsz	___llmod@divisor+3,w
  2403  0594  02A7               	subwf	___llmod@dividend+3,f
  2404  0595                     l1837:
  2405  0595  3001               	movlw	1
  2406  0596                     u1295:
  2407  0596  1003               	clrc
  2408  0597  0CA3               	rrf	___llmod@divisor+3,f
  2409  0598  0CA2               	rrf	___llmod@divisor+2,f
  2410  0599  0CA1               	rrf	___llmod@divisor+1,f
  2411  059A  0CA0               	rrf	___llmod@divisor,f
  2412  059B  3EFF               	addlw	-1
  2413  059C  1D03               	skipz
  2414  059D  2D96               	goto	u1295
  2415  059E                     l1839:
  2416  059E  3001               	movlw	1
  2417  059F  02F4               	subwf	___llmod@counter,f
  2418  05A0  1D03               	btfss	3,2
  2419  05A1  2DA3               	goto	u1301
  2420  05A2  2DA4               	goto	u1300
  2421  05A3                     u1301:
  2422  05A3  2D75               	goto	l1833
  2423  05A4                     u1300:
  2424  05A4                     l1841:
  2425  05A4  0827               	movf	___llmod@dividend+3,w
  2426  05A5  00A3               	movwf	?___llmod+3
  2427  05A6  0826               	movf	___llmod@dividend+2,w
  2428  05A7  00A2               	movwf	?___llmod+2
  2429  05A8  0825               	movf	___llmod@dividend+1,w
  2430  05A9  00A1               	movwf	?___llmod+1
  2431  05AA  0824               	movf	___llmod@dividend,w
  2432  05AB  00A0               	movwf	?___llmod
  2433  05AC                     l551:
  2434  05AC  0008               	return
  2435  05AD                     __end_of___llmod:
  2436                           
  2437                           	psect	text8
  2438  0488                     __ptext8:	
  2439 ;; *************** function ___lldiv *****************
  2440 ;; Defined at:
  2441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  divisor         4    0[BANK0 ] unsigned long 
  2444 ;;  dividend        4    4[BANK0 ] unsigned long 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  quotient        4    8[BANK0 ] unsigned long 
  2447 ;;  counter         1   12[BANK0 ] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  4    0[BANK0 ] unsigned long 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1
  2457 ;;      Params:         0       8       0
  2458 ;;      Locals:         0       5       0
  2459 ;;      Temps:          1       0       0
  2460 ;;      Totals:         1      13       0
  2461 ;;Total ram usage:       14 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 2
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_ultoa
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471  0488                     ___lldiv:	
  2472                           ;psect for function ___lldiv
  2473                           
  2474  0488                     l1801:	
  2475                           ;incstack = 0
  2476                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2477                           
  2478  0488  3000               	movlw	0
  2479  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2480  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2481  048B  00AB               	movwf	___lldiv@quotient+3
  2482  048C  3000               	movlw	0
  2483  048D  00AA               	movwf	___lldiv@quotient+2
  2484  048E  3000               	movlw	0
  2485  048F  00A9               	movwf	___lldiv@quotient+1
  2486  0490  3000               	movlw	0
  2487  0491  00A8               	movwf	___lldiv@quotient
  2488  0492  0823               	movf	___lldiv@divisor+3,w
  2489  0493  0422               	iorwf	___lldiv@divisor+2,w
  2490  0494  0421               	iorwf	___lldiv@divisor+1,w
  2491  0495  0420               	iorwf	___lldiv@divisor,w
  2492  0496  1903               	skipnz
  2493  0497  2C99               	goto	u1181
  2494  0498  2C9A               	goto	u1180
  2495  0499                     u1181:
  2496  0499  2CE7               	goto	l1821
  2497  049A                     u1180:
  2498  049A                     l1803:
  2499  049A  01AC               	clrf	___lldiv@counter
  2500  049B  0AAC               	incf	___lldiv@counter,f
  2501  049C  2CAA               	goto	l1807
  2502  049D                     l1805:
  2503  049D  3001               	movlw	1
  2504  049E  00F3               	movwf	??___lldiv
  2505  049F                     u1195:
  2506  049F  1003               	clrc
  2507  04A0  0DA0               	rlf	___lldiv@divisor,f
  2508  04A1  0DA1               	rlf	___lldiv@divisor+1,f
  2509  04A2  0DA2               	rlf	___lldiv@divisor+2,f
  2510  04A3  0DA3               	rlf	___lldiv@divisor+3,f
  2511  04A4  0BF3               	decfsz	??___lldiv,f
  2512  04A5  2C9F               	goto	u1195
  2513  04A6  3001               	movlw	1
  2514  04A7  00F3               	movwf	??___lldiv
  2515  04A8  0873               	movf	??___lldiv,w
  2516  04A9  07AC               	addwf	___lldiv@counter,f
  2517  04AA                     l1807:
  2518  04AA  1FA3               	btfss	___lldiv@divisor+3,7
  2519  04AB  2CAD               	goto	u1201
  2520  04AC  2CAE               	goto	u1200
  2521  04AD                     u1201:
  2522  04AD  2C9D               	goto	l1805
  2523  04AE                     u1200:
  2524  04AE                     l1809:
  2525  04AE  3001               	movlw	1
  2526  04AF  00F3               	movwf	??___lldiv
  2527  04B0                     u1215:
  2528  04B0  1003               	clrc
  2529  04B1  0DA8               	rlf	___lldiv@quotient,f
  2530  04B2  0DA9               	rlf	___lldiv@quotient+1,f
  2531  04B3  0DAA               	rlf	___lldiv@quotient+2,f
  2532  04B4  0DAB               	rlf	___lldiv@quotient+3,f
  2533  04B5  0BF3               	decfsz	??___lldiv,f
  2534  04B6  2CB0               	goto	u1215
  2535  04B7                     l1811:
  2536  04B7  0823               	movf	___lldiv@divisor+3,w
  2537  04B8  0227               	subwf	___lldiv@dividend+3,w
  2538  04B9  1D03               	skipz
  2539  04BA  2CC5               	goto	u1225
  2540  04BB  0822               	movf	___lldiv@divisor+2,w
  2541  04BC  0226               	subwf	___lldiv@dividend+2,w
  2542  04BD  1D03               	skipz
  2543  04BE  2CC5               	goto	u1225
  2544  04BF  0821               	movf	___lldiv@divisor+1,w
  2545  04C0  0225               	subwf	___lldiv@dividend+1,w
  2546  04C1  1D03               	skipz
  2547  04C2  2CC5               	goto	u1225
  2548  04C3  0820               	movf	___lldiv@divisor,w
  2549  04C4  0224               	subwf	___lldiv@dividend,w
  2550  04C5                     u1225:
  2551  04C5  1C03               	skipc
  2552  04C6  2CC8               	goto	u1221
  2553  04C7  2CC9               	goto	u1220
  2554  04C8                     u1221:
  2555  04C8  2CD8               	goto	l1817
  2556  04C9                     u1220:
  2557  04C9                     l1813:
  2558  04C9  0820               	movf	___lldiv@divisor,w
  2559  04CA  02A4               	subwf	___lldiv@dividend,f
  2560  04CB  0821               	movf	___lldiv@divisor+1,w
  2561  04CC  1C03               	skipc
  2562  04CD  0F21               	incfsz	___lldiv@divisor+1,w
  2563  04CE  02A5               	subwf	___lldiv@dividend+1,f
  2564  04CF  0822               	movf	___lldiv@divisor+2,w
  2565  04D0  1C03               	skipc
  2566  04D1  0F22               	incfsz	___lldiv@divisor+2,w
  2567  04D2  02A6               	subwf	___lldiv@dividend+2,f
  2568  04D3  0823               	movf	___lldiv@divisor+3,w
  2569  04D4  1C03               	skipc
  2570  04D5  0F23               	incfsz	___lldiv@divisor+3,w
  2571  04D6  02A7               	subwf	___lldiv@dividend+3,f
  2572  04D7                     l1815:
  2573  04D7  1428               	bsf	___lldiv@quotient,0
  2574  04D8                     l1817:
  2575  04D8  3001               	movlw	1
  2576  04D9                     u1235:
  2577  04D9  1003               	clrc
  2578  04DA  0CA3               	rrf	___lldiv@divisor+3,f
  2579  04DB  0CA2               	rrf	___lldiv@divisor+2,f
  2580  04DC  0CA1               	rrf	___lldiv@divisor+1,f
  2581  04DD  0CA0               	rrf	___lldiv@divisor,f
  2582  04DE  3EFF               	addlw	-1
  2583  04DF  1D03               	skipz
  2584  04E0  2CD9               	goto	u1235
  2585  04E1                     l1819:
  2586  04E1  3001               	movlw	1
  2587  04E2  02AC               	subwf	___lldiv@counter,f
  2588  04E3  1D03               	btfss	3,2
  2589  04E4  2CE6               	goto	u1241
  2590  04E5  2CE7               	goto	u1240
  2591  04E6                     u1241:
  2592  04E6  2CAE               	goto	l1809
  2593  04E7                     u1240:
  2594  04E7                     l1821:
  2595  04E7  082B               	movf	___lldiv@quotient+3,w
  2596  04E8  00A3               	movwf	?___lldiv+3
  2597  04E9  082A               	movf	___lldiv@quotient+2,w
  2598  04EA  00A2               	movwf	?___lldiv+2
  2599  04EB  0829               	movf	___lldiv@quotient+1,w
  2600  04EC  00A1               	movwf	?___lldiv+1
  2601  04ED  0828               	movf	___lldiv@quotient,w
  2602  04EE  00A0               	movwf	?___lldiv
  2603  04EF                     l365:
  2604  04EF  0008               	return
  2605  04F0                     __end_of___lldiv:
  2606                           
  2607                           	psect	text9
  2608  066A                     __ptext9:	
  2609 ;; *************** function _LCD_puts *****************
  2610 ;; Defined at:
  2611 ;;		line 153 in file "LCDdrive882.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  s               2    7[BANK0 ] PTR unsigned char 
  2614 ;;		 -> LCD_display_value@buffer(12), myString3(5), myString2(5), STR_1(6), 
  2615 ;;		 -> myString1(6), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  c               1   11[BANK0 ] unsigned char 
  2618 ;;  i               1   10[BANK0 ] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1
  2628 ;;      Params:         0       2       0
  2629 ;;      Locals:         0       2       0
  2630 ;;      Temps:          0       1       0
  2631 ;;      Totals:         0       5       0
  2632 ;;Total ram usage:        5 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 4
  2635 ;; This function calls:
  2636 ;;		_LCD_putch
  2637 ;; This function is called by:
  2638 ;;		_displaySetup
  2639 ;;		_LCD_display_value
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643  066A                     _LCD_puts:	
  2644                           ;psect for function _LCD_puts
  2645                           
  2646  066A                     l1889:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2649                           
  2650                           
  2651                           ;LCDdrive882.c: 153: void LCD_puts(unsigned char *s);LCDdrive882.c: 154: {;LCDdrive882.c
      +                          : 155:         unsigned char c = 255;
  2652  066A  30FF               	movlw	255
  2653  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2654  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2655  066D  00A9               	movwf	??_LCD_puts
  2656  066E  0829               	movf	??_LCD_puts,w
  2657  066F  00AB               	movwf	LCD_puts@c
  2658  0670                     l1891:
  2659                           
  2660                           ;LCDdrive882.c: 156:         unsigned char i = 0;
  2661  0670  01AA               	clrf	LCD_puts@i
  2662                           
  2663                           ;LCDdrive882.c: 157:         while ((c > 0) && (i < 16))
  2664  0671  2E8A               	goto	l1901
  2665  0672                     l1893:
  2666                           
  2667                           ;LCDdrive882.c: 158:         {;LCDdrive882.c: 159:           c = s[i];
  2668  0672  082A               	movf	LCD_puts@i,w
  2669  0673  0727               	addwf	LCD_puts@s,w
  2670  0674  0084               	movwf	4
  2671  0675  0828               	movf	LCD_puts@s+1,w
  2672  0676  1803               	skipnc
  2673  0677  0A28               	incf	LCD_puts@s+1,w
  2674  0678  00FF               	movwf	btemp+1
  2675  0679  2100               	fcall	stringtab
  2676  067A  00A9               	movwf	??_LCD_puts
  2677  067B  0829               	movf	??_LCD_puts,w
  2678  067C  00AB               	movwf	LCD_puts@c
  2679  067D                     l1895:
  2680                           
  2681                           ;LCDdrive882.c: 160:           if (c != 0) LCD_putch(c);
  2682  067D  082B               	movf	LCD_puts@c,w
  2683  067E  1903               	btfsc	3,2
  2684  067F  2E81               	goto	u1361
  2685  0680  2E82               	goto	u1360
  2686  0681                     u1361:
  2687  0681  2E84               	goto	l1899
  2688  0682                     u1360:
  2689  0682                     l1897:
  2690  0682  082B               	movf	LCD_puts@c,w
  2691  0683  2733               	fcall	_LCD_putch
  2692  0684                     l1899:
  2693                           
  2694                           ;LCDdrive882.c: 161:           i++;
  2695  0684  3001               	movlw	1
  2696  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0687  00A9               	movwf	??_LCD_puts
  2699  0688  0829               	movf	??_LCD_puts,w
  2700  0689  07AA               	addwf	LCD_puts@i,f
  2701  068A                     l1901:
  2702                           
  2703                           ;LCDdrive882.c: 157:         while ((c > 0) && (i < 16))
  2704  068A  082B               	movf	LCD_puts@c,w
  2705  068B  1903               	btfsc	3,2
  2706  068C  2E8E               	goto	u1371
  2707  068D  2E8F               	goto	u1370
  2708  068E                     u1371:
  2709  068E  2E95               	goto	l207
  2710  068F                     u1370:
  2711  068F                     l1903:
  2712  068F  3010               	movlw	16
  2713  0690  022A               	subwf	LCD_puts@i,w
  2714  0691  1C03               	skipc
  2715  0692  2E94               	goto	u1381
  2716  0693  2E95               	goto	u1380
  2717  0694                     u1381:
  2718  0694  2E72               	goto	l1893
  2719  0695                     u1380:
  2720  0695                     l207:
  2721  0695  0008               	return
  2722  0696                     __end_of_LCD_puts:
  2723                           
  2724                           	psect	text10
  2725  0733                     __ptext10:	
  2726 ;; *************** function _LCD_putch *****************
  2727 ;; Defined at:
  2728 ;;		line 135 in file "LCDdrive882.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  c               1    wreg     unsigned char 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  c               1    5[COMMON] unsigned char 
  2733 ;;  counter         2    6[COMMON] unsigned int 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1
  2743 ;;      Params:         0       0       0
  2744 ;;      Locals:         3       0       0
  2745 ;;      Temps:          0       0       0
  2746 ;;      Totals:         3       0       0
  2747 ;;Total ram usage:        3 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 3
  2750 ;; This function calls:
  2751 ;;		_LCD_write
  2752 ;; This function is called by:
  2753 ;;		_mv_Right
  2754 ;;		_displaySetup
  2755 ;;		_LCD_puts
  2756 ;;		_LCD_putsc
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760  0733                     _LCD_putch:	
  2761                           ;psect for function _LCD_putch
  2762                           
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _LCD_putch: [wreg+status,2+status,0+pclath+cstack]
  2766                           ;LCD_putch@c stored from wreg
  2767  0733  00F5               	movwf	LCD_putch@c
  2768  0734                     l1845:
  2769                           
  2770                           ;LCDdrive882.c: 135: void LCD_putch(unsigned char c);LCDdrive882.c: 136: {;LCDdrive882.c
      +                          : 137:         unsigned int counter;;LCDdrive882.c: 138:         LCD_write(c, 1);
  2771  0734  01F3               	clrf	LCD_write@rs
  2772  0735  0AF3               	incf	LCD_write@rs,f
  2773  0736  0875               	movf	LCD_putch@c,w
  2774  0737  2320               	fcall	_LCD_write
  2775  0738                     l1847:
  2776                           
  2777                           ;LCDdrive882.c: 139:         for (counter = 0; counter < 250; counter++);
  2778  0738  01F6               	clrf	LCD_putch@counter
  2779  0739  01F7               	clrf	LCD_putch@counter+1
  2780  073A                     l1853:
  2781  073A  3001               	movlw	1
  2782  073B  07F6               	addwf	LCD_putch@counter,f
  2783  073C  1803               	skipnc
  2784  073D  0AF7               	incf	LCD_putch@counter+1,f
  2785  073E  3000               	movlw	0
  2786  073F  07F7               	addwf	LCD_putch@counter+1,f
  2787  0740  3000               	movlw	0
  2788  0741  0277               	subwf	LCD_putch@counter+1,w
  2789  0742  30FA               	movlw	250
  2790  0743  1903               	skipnz
  2791  0744  0276               	subwf	LCD_putch@counter,w
  2792  0745  1C03               	skipc
  2793  0746  2F48               	goto	u1311
  2794  0747  2F49               	goto	u1310
  2795  0748                     u1311:
  2796  0748  2F3A               	goto	l1853
  2797  0749                     u1310:
  2798  0749                     l191:
  2799  0749  0008               	return
  2800  074A                     __end_of_LCD_putch:
  2801                           
  2802                           	psect	text11
  2803  079E                     __ptext11:	
  2804 ;; *************** function _ADC_channel_select *****************
  2805 ;; Defined at:
  2806 ;;		line 47 in file "ADClib882.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  channel         1    wreg     unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  channel         1    4[COMMON] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1
  2820 ;;      Params:         0       0       0
  2821 ;;      Locals:         1       0       0
  2822 ;;      Temps:          1       0       0
  2823 ;;      Totals:         2       0       0
  2824 ;;Total ram usage:        2 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_displaySetup
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834  079E                     _ADC_channel_select:	
  2835                           ;psect for function _ADC_channel_select
  2836                           
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _ADC_channel_select: [wreg+status,2+status,0]
  2840                           ;ADC_channel_select@channel stored from wreg
  2841  079E  00F4               	movwf	ADC_channel_select@channel
  2842  079F                     l1525:
  2843                           
  2844                           ;ADClib882.c: 47: void ADC_channel_select(unsigned char channel);ADClib882.c: 48: {;ADCl
      +                          ib882.c: 49:     ADCON0bits.CHS=channel;
  2845  079F  0874               	movf	ADC_channel_select@channel,w
  2846  07A0  00F3               	movwf	??_ADC_channel_select
  2847  07A1  0DF3               	rlf	??_ADC_channel_select,f
  2848  07A2  0DF3               	rlf	??_ADC_channel_select,f
  2849  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  2850  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  2851  07A5  081F               	movf	31,w	;volatile
  2852  07A6  0673               	xorwf	??_ADC_channel_select,w
  2853  07A7  39C3               	andlw	-61
  2854  07A8  0673               	xorwf	??_ADC_channel_select,w
  2855  07A9  009F               	movwf	31	;volatile
  2856  07AA                     l144:
  2857  07AA  0008               	return
  2858  07AB                     __end_of_ADC_channel_select:
  2859                           
  2860                           	psect	text12
  2861  05AD                     __ptext12:	
  2862 ;; *************** function _convrtDegree *****************
  2863 ;; Defined at:
  2864 ;;		line 168 in file "projY.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  tempCheck       2    5[BANK0 ] int 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1
  2878 ;;      Params:         0       0       0
  2879 ;;      Locals:         0       2       0
  2880 ;;      Temps:          0       0       0
  2881 ;;      Totals:         0       2       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 3
  2885 ;; This function calls:
  2886 ;;		_ADC_read
  2887 ;;		_ConvCtoF
  2888 ;;		_GetThermistorTemp
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894  05AD                     _convrtDegree:	
  2895                           ;psect for function _convrtDegree
  2896                           
  2897  05AD                     l2021:	
  2898                           ;incstack = 0
  2899                           ; Regs used in _convrtDegree: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2900                           
  2901                           
  2902                           ;projY.c: 170:     int tempCheck;;projY.c: 171:             if(Degree=='F')
  2903  05AD  3046               	movlw	70
  2904  05AE  067A               	xorwf	_Degree,w
  2905  05AF  1D03               	btfss	3,2
  2906  05B0  2DB2               	goto	u1501
  2907  05B1  2DB3               	goto	u1500
  2908  05B2                     u1501:
  2909  05B2  2DD4               	goto	l2029
  2910  05B3                     u1500:
  2911  05B3                     l2023:
  2912                           
  2913                           ;projY.c: 172:         {;projY.c: 173:             tempCheck = GetThermistorTemp(ADC_rea
      +                          d());
  2914  05B3  2775               	fcall	_ADC_read
  2915  05B4  0874               	movf	?_ADC_read+1,w
  2916  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2917  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2918  05B7  00A1               	movwf	GetThermistorTemp@ADCValue+1
  2919  05B8  0873               	movf	?_ADC_read,w
  2920  05B9  00A0               	movwf	GetThermistorTemp@ADCValue
  2921  05BA  25E1               	fcall	_GetThermistorTemp
  2922  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2923  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2924  05BD  00A5               	movwf	convrtDegree@tempCheck
  2925  05BE  01A6               	clrf	convrtDegree@tempCheck+1
  2926  05BF  1BA5               	btfsc	convrtDegree@tempCheck,7
  2927  05C0  03A6               	decf	convrtDegree@tempCheck+1,f
  2928  05C1                     l2025:
  2929                           
  2930                           ;projY.c: 174:             if(tempCheck!=-99)
  2931  05C1  309D               	movlw	157
  2932  05C2  0625               	xorwf	convrtDegree@tempCheck,w
  2933  05C3  1D03               	skipz
  2934  05C4  2DCA               	goto	u1510
  2935  05C5  0A26               	incf	convrtDegree@tempCheck+1,w
  2936  05C6  1903               	btfsc	3,2
  2937  05C7  2DC9               	goto	u1511
  2938  05C8  2DCA               	goto	u1510
  2939  05C9                     u1511:
  2940  05C9  2DD4               	goto	l2029
  2941  05CA                     u1510:
  2942  05CA                     l2027:
  2943                           
  2944                           ;projY.c: 175:                temp = ConvCtoF(tempCheck);
  2945  05CA  0826               	movf	convrtDegree@tempCheck+1,w
  2946  05CB  00F4               	movwf	ConvCtoF@tempC+1
  2947  05CC  0825               	movf	convrtDegree@tempCheck,w
  2948  05CD  00F3               	movwf	ConvCtoF@tempC
  2949  05CE  274A               	fcall	_ConvCtoF
  2950  05CF  0874               	movf	?_ConvCtoF+1,w
  2951  05D0  00F9               	movwf	_temp+1
  2952  05D1  0873               	movf	?_ConvCtoF,w
  2953  05D2  00F8               	movwf	_temp
  2954  05D3  2DE0               	goto	l108
  2955  05D4                     l2029:
  2956                           
  2957                           ;projY.c: 177:                 temp = GetThermistorTemp(ADC_read());
  2958  05D4  2775               	fcall	_ADC_read
  2959  05D5  0874               	movf	?_ADC_read+1,w
  2960  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2961  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2962  05D8  00A1               	movwf	GetThermistorTemp@ADCValue+1
  2963  05D9  0873               	movf	?_ADC_read,w
  2964  05DA  00A0               	movwf	GetThermistorTemp@ADCValue
  2965  05DB  25E1               	fcall	_GetThermistorTemp
  2966  05DC  00F8               	movwf	_temp
  2967  05DD  01F9               	clrf	_temp+1
  2968  05DE  1BF8               	btfsc	_temp,7
  2969  05DF  03F9               	decf	_temp+1,f
  2970  05E0                     l108:
  2971  05E0  0008               	return
  2972  05E1                     __end_of_convrtDegree:
  2973                           
  2974                           	psect	text13
  2975  05E1                     __ptext13:	
  2976 ;; *************** function _GetThermistorTemp *****************
  2977 ;; Defined at:
  2978 ;;		line 18 in file "ThermistorConv.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  ADCValue        2    0[BANK0 ] unsigned int 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  i               1    7[COMMON] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      char 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1
  2992 ;;      Params:         0       2       0
  2993 ;;      Locals:         1       0       0
  2994 ;;      Temps:          0       3       0
  2995 ;;      Totals:         1       5       0
  2996 ;;Total ram usage:        6 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;;		_convrtDegree
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007  05E1                     _GetThermistorTemp:	
  3008                           ;psect for function _GetThermistorTemp
  3009                           
  3010  05E1                     l1919:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _GetThermistorTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3013                           
  3014                           
  3015                           ;ThermistorConv.c: 18: signed char GetThermistorTemp (unsigned int ADCValue);ThermistorC
      +                          onv.c: 19: {;ThermistorConv.c: 20:     unsigned char i;;ThermistorConv.c: 23:     for(i=
      +                          0; i<temparraysize; i++)
  3016  05E1  01F7               	clrf	GetThermistorTemp@i
  3017  05E2  2E09               	goto	l1929
  3018  05E3                     l1921:
  3019                           
  3020                           ;ThermistorConv.c: 24:     {;ThermistorConv.c: 25:         if (ThermValueLUT[i]<ADCValue
      +                          ) return TempLUT[i];
  3021  05E3  0877               	movf	GetThermistorTemp@i,w
  3022  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3023  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3024  05E6  00A2               	movwf	??_GetThermistorTemp
  3025  05E7  0722               	addwf	??_GetThermistorTemp,w
  3026  05E8  3E12               	addlw	low (_ThermValueLUT| (0+32768))
  3027  05E9  0084               	movwf	4
  3028  05EA  3081               	movlw	high (_ThermValueLUT| (0+32768))
  3029  05EB  1803               	skipnc
  3030  05EC  3E01               	addlw	1
  3031  05ED  00FF               	movwf	btemp+1
  3032  05EE  2100               	fcall	stringtab
  3033  05EF  00A3               	movwf	??_GetThermistorTemp+1
  3034  05F0  2100               	fcall	stringtab
  3035  05F1  00A4               	movwf	??_GetThermistorTemp+2
  3036  05F2  0821               	movf	GetThermistorTemp@ADCValue+1,w
  3037  05F3  0224               	subwf	??_GetThermistorTemp+2,w
  3038  05F4  1D03               	skipz
  3039  05F5  2DF8               	goto	u1405
  3040  05F6  0820               	movf	GetThermistorTemp@ADCValue,w
  3041  05F7  0223               	subwf	??_GetThermistorTemp+1,w
  3042  05F8                     u1405:
  3043  05F8  1803               	skipnc
  3044  05F9  2DFB               	goto	u1401
  3045  05FA  2DFC               	goto	u1400
  3046  05FB                     u1401:
  3047  05FB  2E05               	goto	l1927
  3048  05FC                     u1400:
  3049  05FC                     l1923:
  3050  05FC  0877               	movf	GetThermistorTemp@i,w
  3051  05FD  3E04               	addlw	low (_TempLUT| (0+32768))
  3052  05FE  0084               	movwf	4
  3053  05FF  3082               	movlw	high (_TempLUT| (0+32768))
  3054  0600  1803               	skipnc
  3055  0601  3E01               	addlw	1
  3056  0602  00FF               	movwf	btemp+1
  3057  0603  2100               	fcall	stringtab
  3058  0604  2E10               	goto	l242
  3059  0605                     l1927:
  3060                           
  3061                           ;ThermistorConv.c: 26:     }
  3062  0605  3001               	movlw	1
  3063  0606  00A2               	movwf	??_GetThermistorTemp
  3064  0607  0822               	movf	??_GetThermistorTemp,w
  3065  0608  07F7               	addwf	GetThermistorTemp@i,f
  3066  0609                     l1929:
  3067  0609  3079               	movlw	121
  3068  060A  0277               	subwf	GetThermistorTemp@i,w
  3069  060B  1C03               	skipc
  3070  060C  2E0E               	goto	u1411
  3071  060D  2E0F               	goto	u1410
  3072  060E                     u1411:
  3073  060E  2DE3               	goto	l1921
  3074  060F                     u1410:
  3075  060F                     l1931:
  3076                           
  3077                           ;ThermistorConv.c: 27:     return -99;
  3078  060F  309D               	movlw	157
  3079  0610                     l242:
  3080  0610  0008               	return
  3081  0611                     __end_of_GetThermistorTemp:
  3082                           
  3083                           	psect	text14
  3084  074A                     __ptext14:	
  3085 ;; *************** function _ConvCtoF *****************
  3086 ;; Defined at:
  3087 ;;		line 106 in file "projY.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  tempC           2    3[COMMON] int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  tempF           2    0[BANK0 ] int 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    3[COMMON] int 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1
  3101 ;;      Params:         2       0       0
  3102 ;;      Locals:         0       2       0
  3103 ;;      Temps:          2       0       0
  3104 ;;      Totals:         4       2       0
  3105 ;;Total ram usage:        6 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 2
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_convrtDegree
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115  074A                     _ConvCtoF:	
  3116                           ;psect for function _ConvCtoF
  3117                           
  3118  074A                     l1955:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _ConvCtoF: [wreg+status,2+status,0]
  3121                           
  3122                           
  3123                           ;projY.c: 106: int ConvCtoF(int tempC);projY.c: 107: {;projY.c: 108:    int tempF = ((te
      +                          mpC*2))+32;
  3124  074A  0874               	movf	ConvCtoF@tempC+1,w
  3125  074B  00F6               	movwf	??_ConvCtoF+1
  3126  074C  0873               	movf	ConvCtoF@tempC,w
  3127  074D  00F5               	movwf	??_ConvCtoF
  3128  074E  1003               	clrc
  3129  074F  0DF5               	rlf	??_ConvCtoF,f
  3130  0750  0DF6               	rlf	??_ConvCtoF+1,f
  3131  0751  0875               	movf	??_ConvCtoF,w
  3132  0752  3E20               	addlw	32
  3133  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0754  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0755  00A0               	movwf	ConvCtoF@tempF
  3136  0756  0876               	movf	??_ConvCtoF+1,w
  3137  0757  1803               	skipnc
  3138  0758  3E01               	addlw	1
  3139  0759  3E00               	addlw	0
  3140  075A  00A1               	movwf	ConvCtoF@tempF+1
  3141  075B                     l1957:
  3142                           
  3143                           ;projY.c: 109:    return tempF;
  3144  075B  0821               	movf	ConvCtoF@tempF+1,w
  3145  075C  00F4               	movwf	?_ConvCtoF+1
  3146  075D  0820               	movf	ConvCtoF@tempF,w
  3147  075E  00F3               	movwf	?_ConvCtoF
  3148  075F                     l83:
  3149  075F  0008               	return
  3150  0760                     __end_of_ConvCtoF:
  3151                           
  3152                           	psect	text15
  3153  0775                     __ptext15:	
  3154 ;; *************** function _ADC_read *****************
  3155 ;; Defined at:
  3156 ;;		line 29 in file "ADClib882.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  result          2    5[COMMON] unsigned int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  2    3[COMMON] unsigned int 
  3163 ;; Registers used:
  3164 ;;		wreg
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1
  3170 ;;      Params:         2       0       0
  3171 ;;      Locals:         2       0       0
  3172 ;;      Temps:          0       0       0
  3173 ;;      Totals:         4       0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 2
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_convrtDegree
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185  0775                     _ADC_read:	
  3186                           ;psect for function _ADC_read
  3187                           
  3188  0775                     l1473:	
  3189                           ;incstack = 0
  3190                           ; Regs used in _ADC_read: [wreg]
  3191                           
  3192                           
  3193                           ;ADClib882.c: 31:     unsigned int result;;ADClib882.c: 32:     _delay((unsigned long)((
      +                          5)*(4000000/4000000.0)));
  3194  0775  2F76               	nop2	;2 cycle nop
  3195  0776  2F77               	nop2	;2 cycle nop
  3196  0777  0000               	nop
  3197                           
  3198                           ;ADClib882.c: 33:     ADCON0bits.GO = 1;
  3199  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0779  1303               	bcf	3,6	;RP1=0, select bank0
  3201  077A  149F               	bsf	31,1	;volatile
  3202  077B                     l138:	
  3203                           ;ADClib882.c: 35:     while(ADCON0bits.GO==1);
  3204                           
  3205  077B  189F               	btfsc	31,1	;volatile
  3206  077C  2F7E               	goto	u851
  3207  077D  2F7F               	goto	u850
  3208  077E                     u851:
  3209  077E  2F7B               	goto	l138
  3210  077F                     u850:
  3211  077F                     l1475:
  3212                           
  3213                           ;ADClib882.c: 37:     result =(ADRESH<<8)+ADRESL;
  3214  077F  081E               	movf	30,w	;volatile
  3215  0780  00F6               	movwf	ADC_read@result+1
  3216  0781  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0782  1303               	bcf	3,6	;RP1=0, select bank1
  3218  0783  081E               	movf	30,w	;volatile
  3219  0784  00F5               	movwf	ADC_read@result
  3220                           
  3221                           ;ADClib882.c: 38:     return(result);
  3222  0785  0876               	movf	ADC_read@result+1,w
  3223  0786  00F4               	movwf	?_ADC_read+1
  3224  0787  0875               	movf	ADC_read@result,w
  3225  0788  00F3               	movwf	?_ADC_read
  3226  0789                     l141:
  3227  0789  0008               	return
  3228  078A                     __end_of_ADC_read:
  3229                           
  3230                           	psect	text16
  3231  0611                     __ptext16:	
  3232 ;; *************** function _compareTemp *****************
  3233 ;; Defined at:
  3234 ;;		line 129 in file "projY.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1
  3248 ;;      Params:         0       0       0
  3249 ;;      Locals:         0       0       0
  3250 ;;      Temps:          1       0       0
  3251 ;;      Totals:         1       0       0
  3252 ;;Total ram usage:        1 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 2
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262  0611                     _compareTemp:	
  3263                           ;psect for function _compareTemp
  3264                           
  3265  0611                     l1603:	
  3266                           ;incstack = 0
  3267                           ; Regs used in _compareTemp: [wreg]
  3268                           
  3269                           
  3270                           ;projY.c: 131:     if(tempMin>temp)
  3271  0611  0879               	movf	_temp+1,w
  3272  0612  3A80               	xorlw	128
  3273  0613  00F3               	movwf	??_compareTemp
  3274  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0615  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0616  0856               	movf	_tempMin+1,w
  3277  0617  3A80               	xorlw	128
  3278  0618  0273               	subwf	??_compareTemp,w
  3279  0619  1D03               	skipz
  3280  061A  2E1D               	goto	u985
  3281  061B  0855               	movf	_tempMin,w
  3282  061C  0278               	subwf	_temp,w
  3283  061D                     u985:
  3284  061D  1803               	skipnc
  3285  061E  2E20               	goto	u981
  3286  061F  2E21               	goto	u980
  3287  0620                     u981:
  3288  0620  2E27               	goto	l95
  3289  0621                     u980:
  3290  0621                     l1605:
  3291                           
  3292                           ;projY.c: 132:      {;projY.c: 133:         tempMin=temp;
  3293  0621  0879               	movf	_temp+1,w
  3294  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0624  00D6               	movwf	_tempMin+1
  3297  0625  0878               	movf	_temp,w
  3298  0626  00D5               	movwf	_tempMin
  3299  0627                     l95:	
  3300                           ;projY.c: 134:      }
  3301                           
  3302                           
  3303                           ;projY.c: 135:     if(tempMax<temp)
  3304  0627  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0628  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0629  0854               	movf	_tempMax+1,w
  3307  062A  3A80               	xorlw	128
  3308  062B  00F3               	movwf	??_compareTemp
  3309  062C  0879               	movf	_temp+1,w
  3310  062D  3A80               	xorlw	128
  3311  062E  0273               	subwf	??_compareTemp,w
  3312  062F  1D03               	skipz
  3313  0630  2E33               	goto	u995
  3314  0631  0878               	movf	_temp,w
  3315  0632  0253               	subwf	_tempMax,w
  3316  0633                     u995:
  3317  0633  1803               	skipnc
  3318  0634  2E36               	goto	u991
  3319  0635  2E37               	goto	u990
  3320  0636                     u991:
  3321  0636  2E3D               	goto	l97
  3322  0637                     u990:
  3323  0637                     l1607:
  3324                           
  3325                           ;projY.c: 136:      {;projY.c: 137:        tempMax=temp;
  3326  0637  0879               	movf	_temp+1,w
  3327  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3329  063A  00D4               	movwf	_tempMax+1
  3330  063B  0878               	movf	_temp,w
  3331  063C  00D3               	movwf	_tempMax
  3332  063D                     l97:
  3333  063D  0008               	return
  3334  063E                     __end_of_compareTemp:
  3335                           
  3336                           	psect	text17
  3337  0418                     __ptext17:	
  3338 ;; *************** function _LCD_initialise *****************
  3339 ;; Defined at:
  3340 ;;		line 42 in file "LCDdrive882.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  counter         2    7[BANK0 ] unsigned int 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1
  3354 ;;      Params:         0       0       0
  3355 ;;      Locals:         0       2       0
  3356 ;;      Temps:          0       0       0
  3357 ;;      Totals:         0       2       0
  3358 ;;Total ram usage:        2 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 4
  3361 ;; This function calls:
  3362 ;;		_LCD_clear
  3363 ;;		_LCD_write
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369  0418                     _LCD_initialise:	
  3370                           ;psect for function _LCD_initialise
  3371                           
  3372  0418                     l1969:	
  3373                           ;incstack = 0
  3374                           ; Regs used in _LCD_initialise: [wreg+status,2+status,0+pclath+cstack]
  3375                           
  3376                           
  3377                           ;LCDdrive882.c: 44:     unsigned int counter;;LCDdrive882.c: 46:         LCD_write(0x33,
      +                           0);
  3378  0418  01F3               	clrf	LCD_write@rs
  3379  0419  3033               	movlw	51
  3380  041A  2320               	fcall	_LCD_write
  3381  041B                     l1971:
  3382                           
  3383                           ;LCDdrive882.c: 47:         for (counter = 0; counter < 1250; counter++);
  3384  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3385  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3386  041D  01A7               	clrf	LCD_initialise@counter
  3387  041E  01A8               	clrf	LCD_initialise@counter+1
  3388  041F                     l1977:
  3389  041F  3001               	movlw	1
  3390  0420  07A7               	addwf	LCD_initialise@counter,f
  3391  0421  1803               	skipnc
  3392  0422  0AA8               	incf	LCD_initialise@counter+1,f
  3393  0423  3000               	movlw	0
  3394  0424  07A8               	addwf	LCD_initialise@counter+1,f
  3395  0425  3004               	movlw	4
  3396  0426  0228               	subwf	LCD_initialise@counter+1,w
  3397  0427  30E2               	movlw	226
  3398  0428  1903               	skipnz
  3399  0429  0227               	subwf	LCD_initialise@counter,w
  3400  042A  1C03               	skipc
  3401  042B  2C2D               	goto	u1451
  3402  042C  2C2E               	goto	u1450
  3403  042D                     u1451:
  3404  042D  2C1F               	goto	l1977
  3405  042E                     u1450:
  3406  042E                     l1979:
  3407                           
  3408                           ;LCDdrive882.c: 50:         LCD_write(0x32, 0);
  3409  042E  01F3               	clrf	LCD_write@rs
  3410  042F  3032               	movlw	50
  3411  0430  2320               	fcall	_LCD_write
  3412  0431                     l1981:
  3413                           
  3414                           ;LCDdrive882.c: 51:         for (counter = 0; counter < 1250; counter++);
  3415  0431  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0432  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0433  01A7               	clrf	LCD_initialise@counter
  3418  0434  01A8               	clrf	LCD_initialise@counter+1
  3419  0435                     l1987:
  3420  0435  3001               	movlw	1
  3421  0436  07A7               	addwf	LCD_initialise@counter,f
  3422  0437  1803               	skipnc
  3423  0438  0AA8               	incf	LCD_initialise@counter+1,f
  3424  0439  3000               	movlw	0
  3425  043A  07A8               	addwf	LCD_initialise@counter+1,f
  3426  043B  3004               	movlw	4
  3427  043C  0228               	subwf	LCD_initialise@counter+1,w
  3428  043D  30E2               	movlw	226
  3429  043E  1903               	skipnz
  3430  043F  0227               	subwf	LCD_initialise@counter,w
  3431  0440  1C03               	skipc
  3432  0441  2C43               	goto	u1461
  3433  0442  2C44               	goto	u1460
  3434  0443                     u1461:
  3435  0443  2C35               	goto	l1987
  3436  0444                     u1460:
  3437  0444                     l1989:
  3438                           
  3439                           ;LCDdrive882.c: 54:         LCD_write(0x2c, 0);
  3440  0444  01F3               	clrf	LCD_write@rs
  3441  0445  302C               	movlw	44
  3442  0446  2320               	fcall	_LCD_write
  3443  0447                     l1991:
  3444                           
  3445                           ;LCDdrive882.c: 55:         for (counter = 0; counter < 1250; counter++);
  3446  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0449  01A7               	clrf	LCD_initialise@counter
  3449  044A  01A8               	clrf	LCD_initialise@counter+1
  3450  044B                     l1997:
  3451  044B  3001               	movlw	1
  3452  044C  07A7               	addwf	LCD_initialise@counter,f
  3453  044D  1803               	skipnc
  3454  044E  0AA8               	incf	LCD_initialise@counter+1,f
  3455  044F  3000               	movlw	0
  3456  0450  07A8               	addwf	LCD_initialise@counter+1,f
  3457  0451  3004               	movlw	4
  3458  0452  0228               	subwf	LCD_initialise@counter+1,w
  3459  0453  30E2               	movlw	226
  3460  0454  1903               	skipnz
  3461  0455  0227               	subwf	LCD_initialise@counter,w
  3462  0456  1C03               	skipc
  3463  0457  2C59               	goto	u1471
  3464  0458  2C5A               	goto	u1470
  3465  0459                     u1471:
  3466  0459  2C4B               	goto	l1997
  3467  045A                     u1470:
  3468  045A                     l1999:
  3469                           
  3470                           ;LCDdrive882.c: 58:         LCD_write(0x06, 0);
  3471  045A  01F3               	clrf	LCD_write@rs
  3472  045B  3006               	movlw	6
  3473  045C  2320               	fcall	_LCD_write
  3474  045D                     l2001:
  3475                           
  3476                           ;LCDdrive882.c: 59:         for (counter = 0; counter < 1250; counter++);
  3477  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3478  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3479  045F  01A7               	clrf	LCD_initialise@counter
  3480  0460  01A8               	clrf	LCD_initialise@counter+1
  3481  0461                     l2007:
  3482  0461  3001               	movlw	1
  3483  0462  07A7               	addwf	LCD_initialise@counter,f
  3484  0463  1803               	skipnc
  3485  0464  0AA8               	incf	LCD_initialise@counter+1,f
  3486  0465  3000               	movlw	0
  3487  0466  07A8               	addwf	LCD_initialise@counter+1,f
  3488  0467  3004               	movlw	4
  3489  0468  0228               	subwf	LCD_initialise@counter+1,w
  3490  0469  30E2               	movlw	226
  3491  046A  1903               	skipnz
  3492  046B  0227               	subwf	LCD_initialise@counter,w
  3493  046C  1C03               	skipc
  3494  046D  2C6F               	goto	u1481
  3495  046E  2C70               	goto	u1480
  3496  046F                     u1481:
  3497  046F  2C61               	goto	l2007
  3498  0470                     u1480:
  3499  0470                     l2009:
  3500                           
  3501                           ;LCDdrive882.c: 62:         LCD_write(0x0c, 0);
  3502  0470  01F3               	clrf	LCD_write@rs
  3503  0471  300C               	movlw	12
  3504  0472  2320               	fcall	_LCD_write
  3505  0473                     l2011:
  3506                           
  3507                           ;LCDdrive882.c: 63:         for (counter = 0; counter < 1250; counter++);
  3508  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0475  01A7               	clrf	LCD_initialise@counter
  3511  0476  01A8               	clrf	LCD_initialise@counter+1
  3512  0477                     l2017:
  3513  0477  3001               	movlw	1
  3514  0478  07A7               	addwf	LCD_initialise@counter,f
  3515  0479  1803               	skipnc
  3516  047A  0AA8               	incf	LCD_initialise@counter+1,f
  3517  047B  3000               	movlw	0
  3518  047C  07A8               	addwf	LCD_initialise@counter+1,f
  3519  047D  3004               	movlw	4
  3520  047E  0228               	subwf	LCD_initialise@counter+1,w
  3521  047F  30E2               	movlw	226
  3522  0480  1903               	skipnz
  3523  0481  0227               	subwf	LCD_initialise@counter,w
  3524  0482  1C03               	skipc
  3525  0483  2C85               	goto	u1491
  3526  0484  2C86               	goto	u1490
  3527  0485                     u1491:
  3528  0485  2C77               	goto	l2017
  3529  0486                     u1490:
  3530  0486                     l2019:
  3531                           
  3532                           ;LCDdrive882.c: 65:         LCD_clear();
  3533  0486  26C0               	fcall	_LCD_clear
  3534  0487                     l173:
  3535  0487  0008               	return
  3536  0488                     __end_of_LCD_initialise:
  3537                           
  3538                           	psect	text18
  3539  06C0                     __ptext18:	
  3540 ;; *************** function _LCD_clear *****************
  3541 ;; Defined at:
  3542 ;;		line 143 in file "LCDdrive882.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  counter         2    5[COMMON] unsigned int 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1
  3556 ;;      Params:         0       0       0
  3557 ;;      Locals:         2       0       0
  3558 ;;      Temps:          0       0       0
  3559 ;;      Totals:         2       0       0
  3560 ;;Total ram usage:        2 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 3
  3563 ;; This function calls:
  3564 ;;		_LCD_write
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;;		_LCD_initialise
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571  06C0                     _LCD_clear:	
  3572                           ;psect for function _LCD_clear
  3573                           
  3574  06C0                     l1935:	
  3575                           ;incstack = 0
  3576                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  3577                           
  3578                           
  3579                           ;LCDdrive882.c: 145:         unsigned int counter;;LCDdrive882.c: 146:         LCD_write
      +                          (1, 0);
  3580  06C0  01F3               	clrf	LCD_write@rs
  3581  06C1  3001               	movlw	1
  3582  06C2  2320               	fcall	_LCD_write
  3583  06C3                     l1937:
  3584                           
  3585                           ;LCDdrive882.c: 147:         for (counter = 0; counter < 1250; counter++);
  3586  06C3  01F5               	clrf	LCD_clear@counter
  3587  06C4  01F6               	clrf	LCD_clear@counter+1
  3588  06C5                     l1943:
  3589  06C5  3001               	movlw	1
  3590  06C6  07F5               	addwf	LCD_clear@counter,f
  3591  06C7  1803               	skipnc
  3592  06C8  0AF6               	incf	LCD_clear@counter+1,f
  3593  06C9  3000               	movlw	0
  3594  06CA  07F6               	addwf	LCD_clear@counter+1,f
  3595  06CB  3004               	movlw	4
  3596  06CC  0276               	subwf	LCD_clear@counter+1,w
  3597  06CD  30E2               	movlw	226
  3598  06CE  1903               	skipnz
  3599  06CF  0275               	subwf	LCD_clear@counter,w
  3600  06D0  1C03               	skipc
  3601  06D1  2ED3               	goto	u1421
  3602  06D2  2ED4               	goto	u1420
  3603  06D3                     u1421:
  3604  06D3  2EC5               	goto	l1943
  3605  06D4                     u1420:
  3606  06D4                     l1945:
  3607                           
  3608                           ;LCDdrive882.c: 148:         LCD_write(2, 0);
  3609  06D4  01F3               	clrf	LCD_write@rs
  3610  06D5  3002               	movlw	2
  3611  06D6  2320               	fcall	_LCD_write
  3612  06D7                     l1947:
  3613                           
  3614                           ;LCDdrive882.c: 149:         for (counter = 0; counter < 1250; counter++);
  3615  06D7  01F5               	clrf	LCD_clear@counter
  3616  06D8  01F6               	clrf	LCD_clear@counter+1
  3617  06D9                     l1953:
  3618  06D9  3001               	movlw	1
  3619  06DA  07F5               	addwf	LCD_clear@counter,f
  3620  06DB  1803               	skipnc
  3621  06DC  0AF6               	incf	LCD_clear@counter+1,f
  3622  06DD  3000               	movlw	0
  3623  06DE  07F6               	addwf	LCD_clear@counter+1,f
  3624  06DF  3004               	movlw	4
  3625  06E0  0276               	subwf	LCD_clear@counter+1,w
  3626  06E1  30E2               	movlw	226
  3627  06E2  1903               	skipnz
  3628  06E3  0275               	subwf	LCD_clear@counter,w
  3629  06E4  1C03               	skipc
  3630  06E5  2EE7               	goto	u1431
  3631  06E6  2EE8               	goto	u1430
  3632  06E7                     u1431:
  3633  06E7  2ED9               	goto	l1953
  3634  06E8                     u1430:
  3635  06E8                     l198:
  3636  06E8  0008               	return
  3637  06E9                     __end_of_LCD_clear:
  3638                           
  3639                           	psect	text19
  3640  0320                     __ptext19:	
  3641 ;; *************** function _LCD_write *****************
  3642 ;; Defined at:
  3643 ;;		line 73 in file "LCDdrive882.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  c               1    wreg     unsigned char 
  3646 ;;  rs              1    3[COMMON] unsigned char 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  c               1    3[BANK0 ] unsigned char 
  3649 ;;  counter         2    5[BANK0 ] unsigned int 
  3650 ;;  RSmask          1    4[BANK0 ] unsigned char 
  3651 ;;  TRISC_BAK       1    2[BANK0 ] unsigned char 
  3652 ;;  intsON          1    1[BANK0 ] unsigned char 
  3653 ;;  temp            1    0[BANK0 ] unsigned char 
  3654 ;;  INTCON_BAK      1    0        unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1
  3664 ;;      Params:         1       0       0
  3665 ;;      Locals:         0       7       0
  3666 ;;      Temps:          1       0       0
  3667 ;;      Totals:         2       7       0
  3668 ;;Total ram usage:        9 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 2
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_LCD_initialise
  3675 ;;		_LCD_putch
  3676 ;;		_LCD_clear
  3677 ;;		_LCD_cursor
  3678 ;;		_LCD_cursor_on
  3679 ;;		_LCD_cursor_off
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683  0320                     _LCD_write:	
  3684                           ;psect for function _LCD_write
  3685                           
  3686                           
  3687                           ;incstack = 0
  3688                           ; Regs used in _LCD_write: [wreg+status,2+status,0]
  3689                           ;LCD_write@c stored from wreg
  3690  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0321  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0322  00A3               	movwf	LCD_write@c
  3693  0323                     l1741:
  3694                           
  3695                           ;LCDdrive882.c: 73: void LCD_write(unsigned char c, unsigned char rs);LCDdrive882.c: 74:
      +                           {;LCDdrive882.c: 75:         unsigned char temp, intsON;;LCDdrive882.c: 76:         uns
      +                          igned char RSmask = 0;
  3696  0323  01A4               	clrf	LCD_write@RSmask
  3697  0324                     l1743:
  3698                           
  3699                           ;LCDdrive882.c: 77:         unsigned char TRISC_BAK;;LCDdrive882.c: 79:         unsigned
      +                           char INTCON_BAK;;LCDdrive882.c: 80:         unsigned int counter;;LCDdrive882.c: 84:   
      +                                intsON = INTCONbits.GIE;
  3700  0324  3000               	movlw	0
  3701  0325  1B8B               	btfsc	11,7	;volatile
  3702  0326  3001               	movlw	1
  3703  0327  00A1               	movwf	LCD_write@intsON
  3704  0328                     l1745:
  3705                           
  3706                           ;LCDdrive882.c: 85:         INTCONbits.GIE = 0;
  3707  0328  138B               	bcf	11,7	;volatile
  3708                           
  3709                           ;LCDdrive882.c: 86:         TRISC_BAK = TRISC;
  3710  0329  1683               	bsf	3,5	;RP0=1, select bank1
  3711  032A  1303               	bcf	3,6	;RP1=0, select bank1
  3712  032B  0807               	movf	7,w	;volatile
  3713  032C  00F4               	movwf	??_LCD_write
  3714  032D  0874               	movf	??_LCD_write,w
  3715  032E  1283               	bcf	3,5	;RP0=0, select bank0
  3716  032F  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0330  00A2               	movwf	LCD_write@TRISC_BAK
  3718  0331                     l1747:
  3719                           
  3720                           ;LCDdrive882.c: 91:         TRISC = 0x00;
  3721  0331  1683               	bsf	3,5	;RP0=1, select bank1
  3722  0332  1303               	bcf	3,6	;RP1=0, select bank1
  3723  0333  0187               	clrf	7	;volatile
  3724  0334                     l1749:
  3725                           
  3726                           ;LCDdrive882.c: 93:         if (rs == 1) RSmask = 0x01;
  3727  0334  0373               	decf	LCD_write@rs,w
  3728  0335  1D03               	btfss	3,2
  3729  0336  2B38               	goto	u1111
  3730  0337  2B39               	goto	u1110
  3731  0338                     u1111:
  3732  0338  2B3D               	goto	l1753
  3733  0339                     u1110:
  3734  0339                     l1751:
  3735  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3736  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3737  033B  01A4               	clrf	LCD_write@RSmask
  3738  033C  0AA4               	incf	LCD_write@RSmask,f
  3739  033D                     l1753:
  3740                           
  3741                           ;LCDdrive882.c: 96:         temp = c;
  3742  033D  1283               	bcf	3,5	;RP0=0, select bank0
  3743  033E  0823               	movf	LCD_write@c,w
  3744  033F  00F4               	movwf	??_LCD_write
  3745  0340  0874               	movf	??_LCD_write,w
  3746  0341  00A0               	movwf	LCD_write@temp
  3747  0342                     l1755:
  3748                           
  3749                           ;LCDdrive882.c: 97:         PORTC = (temp & 0xF0) | RSmask;
  3750  0342  0820               	movf	LCD_write@temp,w
  3751  0343  39F0               	andlw	240
  3752  0344  0424               	iorwf	LCD_write@RSmask,w
  3753  0345  0087               	movwf	7	;volatile
  3754  0346                     l1757:
  3755                           
  3756                           ;LCDdrive882.c: 101:         PORTCbits.RC3 = 1;
  3757  0346  1587               	bsf	7,3	;volatile
  3758  0347                     l1759:
  3759                           
  3760                           ;LCDdrive882.c: 102:         for (counter = 0; counter < 2; counter++);
  3761  0347  01A5               	clrf	LCD_write@counter
  3762  0348  01A6               	clrf	LCD_write@counter+1
  3763  0349                     l1765:
  3764  0349  3001               	movlw	1
  3765  034A  07A5               	addwf	LCD_write@counter,f
  3766  034B  1803               	skipnc
  3767  034C  0AA6               	incf	LCD_write@counter+1,f
  3768  034D  3000               	movlw	0
  3769  034E  07A6               	addwf	LCD_write@counter+1,f
  3770  034F  3000               	movlw	0
  3771  0350  0226               	subwf	LCD_write@counter+1,w
  3772  0351  3002               	movlw	2
  3773  0352  1903               	skipnz
  3774  0353  0225               	subwf	LCD_write@counter,w
  3775  0354  1C03               	skipc
  3776  0355  2B57               	goto	u1121
  3777  0356  2B58               	goto	u1120
  3778  0357                     u1121:
  3779  0357  2B49               	goto	l1765
  3780  0358                     u1120:
  3781  0358                     l178:
  3782                           
  3783                           ;LCDdrive882.c: 104:         PORTCbits.RC3 = 0;
  3784  0358  1187               	bcf	7,3	;volatile
  3785  0359                     l1767:
  3786                           
  3787                           ;LCDdrive882.c: 105:         for (counter = 0; counter < 2; counter++);
  3788  0359  01A5               	clrf	LCD_write@counter
  3789  035A  01A6               	clrf	LCD_write@counter+1
  3790  035B                     l1773:
  3791  035B  3001               	movlw	1
  3792  035C  07A5               	addwf	LCD_write@counter,f
  3793  035D  1803               	skipnc
  3794  035E  0AA6               	incf	LCD_write@counter+1,f
  3795  035F  3000               	movlw	0
  3796  0360  07A6               	addwf	LCD_write@counter+1,f
  3797  0361  3000               	movlw	0
  3798  0362  0226               	subwf	LCD_write@counter+1,w
  3799  0363  3002               	movlw	2
  3800  0364  1903               	skipnz
  3801  0365  0225               	subwf	LCD_write@counter,w
  3802  0366  1C03               	skipc
  3803  0367  2B69               	goto	u1131
  3804  0368  2B6A               	goto	u1130
  3805  0369                     u1131:
  3806  0369  2B5B               	goto	l1773
  3807  036A                     u1130:
  3808  036A                     l1775:
  3809                           
  3810                           ;LCDdrive882.c: 108:         PORTC = (c << 4) | RSmask;
  3811  036A  0823               	movf	LCD_write@c,w
  3812  036B  00F4               	movwf	??_LCD_write
  3813  036C  3003               	movlw	3
  3814  036D                     u1145:
  3815  036D  1003               	clrc
  3816  036E  0DF4               	rlf	??_LCD_write,f
  3817  036F  3EFF               	addlw	-1
  3818  0370  1D03               	skipz
  3819  0371  2B6D               	goto	u1145
  3820  0372  1003               	clrc
  3821  0373  0D74               	rlf	??_LCD_write,w
  3822  0374  0424               	iorwf	LCD_write@RSmask,w
  3823  0375  0087               	movwf	7	;volatile
  3824  0376                     l1777:
  3825                           
  3826                           ;LCDdrive882.c: 112:         PORTCbits.RC3 = 1;
  3827  0376  1587               	bsf	7,3	;volatile
  3828  0377                     l1779:
  3829                           
  3830                           ;LCDdrive882.c: 113:         for (counter = 0; counter < 2; counter++);
  3831  0377  01A5               	clrf	LCD_write@counter
  3832  0378  01A6               	clrf	LCD_write@counter+1
  3833  0379                     l1785:
  3834  0379  3001               	movlw	1
  3835  037A  07A5               	addwf	LCD_write@counter,f
  3836  037B  1803               	skipnc
  3837  037C  0AA6               	incf	LCD_write@counter+1,f
  3838  037D  3000               	movlw	0
  3839  037E  07A6               	addwf	LCD_write@counter+1,f
  3840  037F  3000               	movlw	0
  3841  0380  0226               	subwf	LCD_write@counter+1,w
  3842  0381  3002               	movlw	2
  3843  0382  1903               	skipnz
  3844  0383  0225               	subwf	LCD_write@counter,w
  3845  0384  1C03               	skipc
  3846  0385  2B87               	goto	u1151
  3847  0386  2B88               	goto	u1150
  3848  0387                     u1151:
  3849  0387  2B79               	goto	l1785
  3850  0388                     u1150:
  3851  0388                     l182:
  3852                           
  3853                           ;LCDdrive882.c: 115:         PORTCbits.RC3 = 0;
  3854  0388  1187               	bcf	7,3	;volatile
  3855  0389                     l1787:
  3856                           
  3857                           ;LCDdrive882.c: 116:         for (counter = 0; counter < 2; counter++);
  3858  0389  01A5               	clrf	LCD_write@counter
  3859  038A  01A6               	clrf	LCD_write@counter+1
  3860  038B                     l1793:
  3861  038B  3001               	movlw	1
  3862  038C  07A5               	addwf	LCD_write@counter,f
  3863  038D  1803               	skipnc
  3864  038E  0AA6               	incf	LCD_write@counter+1,f
  3865  038F  3000               	movlw	0
  3866  0390  07A6               	addwf	LCD_write@counter+1,f
  3867  0391  3000               	movlw	0
  3868  0392  0226               	subwf	LCD_write@counter+1,w
  3869  0393  3002               	movlw	2
  3870  0394  1903               	skipnz
  3871  0395  0225               	subwf	LCD_write@counter,w
  3872  0396  1C03               	skipc
  3873  0397  2B99               	goto	u1161
  3874  0398  2B9A               	goto	u1160
  3875  0399                     u1161:
  3876  0399  2B8B               	goto	l1793
  3877  039A                     u1160:
  3878  039A                     l1795:
  3879                           
  3880                           ;LCDdrive882.c: 123:         TRISC = TRISC_BAK;
  3881  039A  0822               	movf	LCD_write@TRISC_BAK,w
  3882  039B  1683               	bsf	3,5	;RP0=1, select bank1
  3883  039C  1303               	bcf	3,6	;RP1=0, select bank1
  3884  039D  0087               	movwf	7	;volatile
  3885  039E                     l1797:
  3886                           
  3887                           ;LCDdrive882.c: 129:         if(intsON) GIE = 1;
  3888  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3889  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3890  03A0  0821               	movf	LCD_write@intsON,w
  3891  03A1  1903               	btfsc	3,2
  3892  03A2  2BA4               	goto	u1171
  3893  03A3  2BA5               	goto	u1170
  3894  03A4                     u1171:
  3895  03A4  2BA6               	goto	l186
  3896  03A5                     u1170:
  3897  03A5                     l1799:
  3898  03A5  178B               	bsf	11,7	;volatile
  3899  03A6                     l186:
  3900  03A6  0008               	return
  3901  03A7                     __end_of_LCD_write:
  3902                           
  3903                           	psect	text20
  3904  071B                     __ptext20:	
  3905 ;; *************** function _ADC_initialise *****************
  3906 ;; Defined at:
  3907 ;;		line 13 in file "ADClib882.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1
  3921 ;;      Params:         0       0       0
  3922 ;;      Locals:         0       0       0
  3923 ;;      Temps:          1       0       0
  3924 ;;      Totals:         1       0       0
  3925 ;;Total ram usage:        1 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 2
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_main
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935  071B                     _ADC_initialise:	
  3936                           ;psect for function _ADC_initialise
  3937                           
  3938  071B                     l1583:	
  3939                           ;incstack = 0
  3940                           ; Regs used in _ADC_initialise: [wreg+status,2+status,0]
  3941                           
  3942                           
  3943                           ;ADClib882.c: 15:     TRISB |= 0x18;
  3944  071B  3018               	movlw	24
  3945  071C  00F3               	movwf	??_ADC_initialise
  3946  071D  0873               	movf	??_ADC_initialise,w
  3947  071E  1683               	bsf	3,5	;RP0=1, select bank1
  3948  071F  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0720  0486               	iorwf	6,f	;volatile
  3950                           
  3951                           ;ADClib882.c: 16:     ANSELH |= 0x0A;
  3952  0721  300A               	movlw	10
  3953  0722  00F3               	movwf	??_ADC_initialise
  3954  0723  0873               	movf	??_ADC_initialise,w
  3955  0724  1683               	bsf	3,5	;RP0=1, select bank3
  3956  0725  1703               	bsf	3,6	;RP1=1, select bank3
  3957  0726  0489               	iorwf	9,f	;volatile
  3958  0727                     l1585:
  3959                           
  3960                           ;ADClib882.c: 17:     ADCON0 = 0x6C;
  3961  0727  306C               	movlw	108
  3962  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0729  1303               	bcf	3,6	;RP1=0, select bank0
  3964  072A  009F               	movwf	31	;volatile
  3965  072B                     l1587:
  3966                           
  3967                           ;ADClib882.c: 18:     ADCON1 = 0x80;
  3968  072B  3080               	movlw	128
  3969  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3970  072D  1303               	bcf	3,6	;RP1=0, select bank1
  3971  072E  009F               	movwf	31	;volatile
  3972  072F                     l1589:
  3973                           
  3974                           ;ADClib882.c: 19:     ADCON0bits.ADON = 1;
  3975  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0731  141F               	bsf	31,0	;volatile
  3978  0732                     l135:
  3979  0732  0008               	return
  3980  0733                     __end_of_ADC_initialise:
  3981                           
  3982                           	psect	text21
  3983  0696                     __ptext21:	
  3984 ;; *************** function _my_ISR *****************
  3985 ;; Defined at:
  3986 ;;		line 186 in file "projY.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1
  4000 ;;      Params:         0       0       0
  4001 ;;      Locals:         0       0       0
  4002 ;;      Temps:          2       0       0
  4003 ;;      Totals:         2       0       0
  4004 ;;Total ram usage:        2 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 1
  4007 ;; This function calls:
  4008 ;;		_flip_deg
  4009 ;;		_reset
  4010 ;; This function is called by:
  4011 ;;		Interrupt level 1
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015  0696                     _my_ISR:	
  4016                           ;psect for function _my_ISR
  4017                           
  4018  0696                     i1l1701:
  4019                           
  4020                           ;projY.c: 188:   if(INTCONbits.RBIF)
  4021  0696  1C0B               	btfss	11,0	;volatile
  4022  0697  2E99               	goto	u105_21
  4023  0698  2E9A               	goto	u105_20
  4024  0699                     u105_21:
  4025  0699  2EB9               	goto	i1l116
  4026  069A                     u105_20:
  4027  069A                     i1l1703:
  4028                           
  4029                           ;projY.c: 189:  {;projY.c: 190:     if(PORTBbits.RB0)
  4030  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4031  069B  1303               	bcf	3,6	;RP1=0, select bank0
  4032  069C  1C06               	btfss	6,0	;volatile
  4033  069D  2E9F               	goto	u106_21
  4034  069E  2EA0               	goto	u106_20
  4035  069F                     u106_21:
  4036  069F  2EA7               	goto	i1l1709
  4037  06A0                     u106_20:
  4038  06A0                     i1l1705:
  4039                           
  4040                           ;projY.c: 191:         {;projY.c: 192:             count_Interrupt++;
  4041  06A0  3001               	movlw	1
  4042  06A1  07D8               	addwf	_count_Interrupt,f
  4043  06A2  1803               	skipnc
  4044  06A3  0AD9               	incf	_count_Interrupt+1,f
  4045  06A4  3000               	movlw	0
  4046  06A5  07D9               	addwf	_count_Interrupt+1,f
  4047  06A6                     i1l1707:
  4048                           
  4049                           ;projY.c: 193:             flip_deg();
  4050  06A6  26E9               	fcall	_flip_deg
  4051  06A7                     i1l1709:
  4052                           
  4053                           ;projY.c: 195:     PORTBbits.RB0 = 0;
  4054  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  4055  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  4056  06A9  1006               	bcf	6,0	;volatile
  4057  06AA                     i1l1711:
  4058                           
  4059                           ;projY.c: 197:     if(PORTBbits.RB1)
  4060  06AA  1C86               	btfss	6,1	;volatile
  4061  06AB  2EAD               	goto	u107_21
  4062  06AC  2EAE               	goto	u107_20
  4063  06AD                     u107_21:
  4064  06AD  2EB4               	goto	i1l1715
  4065  06AE                     u107_20:
  4066  06AE                     i1l1713:
  4067                           
  4068                           ;projY.c: 198:             count_Interrupt++;
  4069  06AE  3001               	movlw	1
  4070  06AF  07D8               	addwf	_count_Interrupt,f
  4071  06B0  1803               	skipnc
  4072  06B1  0AD9               	incf	_count_Interrupt+1,f
  4073  06B2  3000               	movlw	0
  4074  06B3  07D9               	addwf	_count_Interrupt+1,f
  4075  06B4                     i1l1715:
  4076                           
  4077                           ;projY.c: 199:             reset();
  4078  06B4  27AB               	fcall	_reset
  4079  06B5                     i1l1717:
  4080                           
  4081                           ;projY.c: 200:     PORTBbits.RB1 = 0;
  4082  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  4083  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  4084  06B7  1086               	bcf	6,1	;volatile
  4085  06B8                     i1l1719:
  4086                           
  4087                           ;projY.c: 201:     INTCONbits.RBIF = 0;
  4088  06B8  100B               	bcf	11,0	;volatile
  4089  06B9                     i1l116:
  4090  06B9  0872               	movf	??_my_ISR+1,w
  4091  06BA  008A               	movwf	10
  4092  06BB  0E71               	swapf	??_my_ISR,w
  4093  06BC  0083               	movwf	3
  4094  06BD  0EFE               	swapf	btemp,f
  4095  06BE  0E7E               	swapf	btemp,w
  4096  06BF  0009               	retfie
  4097  06C0                     __end_of_my_ISR:
  4098                           
  4099                           	psect	intentry
  4100  0004                     __pintentry:	
  4101                           ;incstack = 0
  4102                           ; Regs used in _my_ISR: [wreg+status,2+status,0+pclath+cstack]
  4103                           
  4104  0004                     interrupt_function:
  4105  007E                     saved_w	set	btemp
  4106  0004  00FE               	movwf	btemp
  4107  0005  0E03               	swapf	3,w
  4108  0006  00F1               	movwf	??_my_ISR
  4109  0007  080A               	movf	10,w
  4110  0008  00F2               	movwf	??_my_ISR+1
  4111  0009  2E96               	ljmp	_my_ISR
  4112                           
  4113                           	psect	text22
  4114  07AB                     __ptext22:	
  4115 ;; *************** function _reset *****************
  4116 ;; Defined at:
  4117 ;;		line 101 in file "projY.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1
  4131 ;;      Params:         0       0       0
  4132 ;;      Locals:         0       0       0
  4133 ;;      Temps:          0       0       0
  4134 ;;      Totals:         0       0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_my_ISR
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144  07AB                     _reset:	
  4145                           ;psect for function _reset
  4146                           
  4147  07AB                     i1l1639:	
  4148                           ;incstack = 0
  4149                           ; Regs used in _reset: [wreg]
  4150                           
  4151                           
  4152                           ;projY.c: 103:     tempMin=temp;
  4153  07AB  0879               	movf	_temp+1,w
  4154  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4155  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  4156  07AE  00D6               	movwf	_tempMin+1
  4157  07AF  0878               	movf	_temp,w
  4158  07B0  00D5               	movwf	_tempMin
  4159                           
  4160                           ;projY.c: 104:     tempMax=temp;
  4161  07B1  0879               	movf	_temp+1,w
  4162  07B2  00D4               	movwf	_tempMax+1
  4163  07B3  0878               	movf	_temp,w
  4164  07B4  00D3               	movwf	_tempMax
  4165  07B5                     i1l80:
  4166  07B5  0008               	return
  4167  07B6                     __end_of_reset:
  4168                           
  4169                           	psect	text23
  4170  06E9                     __ptext23:	
  4171 ;; *************** function _flip_deg *****************
  4172 ;; Defined at:
  4173 ;;		line 120 in file "projY.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1
  4187 ;;      Params:         0       0       0
  4188 ;;      Locals:         0       0       0
  4189 ;;      Temps:          1       0       0
  4190 ;;      Totals:         1       0       0
  4191 ;;Total ram usage:        1 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_my_ISR
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200  06E9                     _flip_deg:	
  4201                           ;psect for function _flip_deg
  4202                           
  4203  06E9                     i1l1641:	
  4204                           ;incstack = 0
  4205                           ; Regs used in _flip_deg: [wreg+status,2+status,0]
  4206                           
  4207                           
  4208                           ;projY.c: 122:     tempMin=200;
  4209  06E9  30C8               	movlw	200
  4210  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  4211  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  4212  06EC  00D5               	movwf	_tempMin
  4213  06ED  3000               	movlw	0
  4214  06EE  00D6               	movwf	_tempMin+1
  4215                           
  4216                           ;projY.c: 123:     tempMax=-50;
  4217  06EF  30CE               	movlw	206
  4218  06F0  00D3               	movwf	_tempMax
  4219  06F1  30FF               	movlw	255
  4220  06F2  00D4               	movwf	_tempMax+1
  4221  06F3                     i1l1643:
  4222                           
  4223                           ;projY.c: 124:     if (Degree=='C')
  4224  06F3  3043               	movlw	67
  4225  06F4  067A               	xorwf	_Degree,w
  4226  06F5  1D03               	btfss	3,2
  4227  06F6  2EF8               	goto	u101_21
  4228  06F7  2EF9               	goto	u101_20
  4229  06F8                     u101_21:
  4230  06F8  2EFE               	goto	i1l1647
  4231  06F9                     u101_20:
  4232  06F9                     i1l1645:
  4233                           
  4234                           ;projY.c: 125:             Degree='F';
  4235  06F9  3046               	movlw	70
  4236  06FA  00F0               	movwf	??_flip_deg
  4237  06FB  0870               	movf	??_flip_deg,w
  4238  06FC  00FA               	movwf	_Degree
  4239  06FD  2F02               	goto	i1l92
  4240  06FE                     i1l1647:
  4241                           
  4242                           ;projY.c: 127:         Degree='C';
  4243  06FE  3043               	movlw	67
  4244  06FF  00F0               	movwf	??_flip_deg
  4245  0700  0870               	movf	??_flip_deg,w
  4246  0701  00FA               	movwf	_Degree
  4247  0702                     i1l92:
  4248  0702  0008               	return
  4249  0703                     __end_of_flip_deg:
  4250  007E                     btemp	set	126	;btemp
  4251  007E                     wtemp0	set	126
  4252                           
  4253                           	psect	idloc
  4254                           
  4255                           ;Config register IDLOC0 @ 0x2000
  4256                           ;	unspecified, using default values
  4257  2000                     	org	8192
  4258  2000  3FFF               	dw	16383
  4259                           
  4260                           ;Config register IDLOC1 @ 0x2001
  4261                           ;	unspecified, using default values
  4262  2001                     	org	8193
  4263  2001  3FFF               	dw	16383
  4264                           
  4265                           ;Config register IDLOC2 @ 0x2002
  4266                           ;	unspecified, using default values
  4267  2002                     	org	8194
  4268  2002  3FFF               	dw	16383
  4269                           
  4270                           ;Config register IDLOC3 @ 0x2003
  4271                           ;	unspecified, using default values
  4272  2003                     	org	8195
  4273  2003  3FFF               	dw	16383
  4274                           
  4275                           	psect	config
  4276                           
  4277                           ;Config register CONFIG1 @ 0x2007
  4278                           ;	Oscillator Selection bits
  4279                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4280                           ;	Watchdog Timer Enable bit
  4281                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4282                           ;	Power-up Timer Enable bit
  4283                           ;	PWRTE = OFF, PWRT disabled
  4284                           ;	RE3/MCLR pin function select bit
  4285                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4286                           ;	Code Protection bit
  4287                           ;	CP = OFF, Program memory code protection is disabled
  4288                           ;	Data Code Protection bit
  4289                           ;	CPD = OFF, Data memory code protection is disabled
  4290                           ;	Brown Out Reset Selection bits
  4291                           ;	BOREN = OFF, BOR disabled
  4292                           ;	Internal External Switchover bit
  4293                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4294                           ;	Fail-Safe Clock Monitor Enabled bit
  4295                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4296                           ;	Low Voltage Programming Enable bit
  4297                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4298                           ;	In-Circuit Debugger Mode bit
  4299                           ;	DEBUG = 0x1, unprogrammed default
  4300  2007                     	org	8199
  4301  2007  20F4               	dw	8436
  4302                           
  4303                           ;Config register CONFIG2 @ 0x2008
  4304                           ;	Brown-out Reset Selection bit
  4305                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4306                           ;	Flash Program Memory Self Write Enable bits
  4307                           ;	WRT = OFF, Write protection off
  4308  2008                     	org	8200
  4309  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    379
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     51      58
    BANK1            32      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_value@buffer(BANK0[12]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_value@buffer(BANK0[12]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_value@buffer(BANK0[12]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_value@buffer(BANK0[12]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_value@buffer(BANK0[12]), 

    LCD_puts@s	PTR unsigned char  size(2) Largest target is 12
		 -> LCD_display_value@buffer(BANK0[12]), myString3(CODE[5]), myString2(CODE[5]), STR_1(CODE[6]), 
		 -> myString1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_GetThermistorTemp
    _displaySetup->_LCD_cursor
    _displaySetup->_LCD_putch
    _mv_Right->_LCD_cursor
    _mv_Right->_LCD_putch
    _LCD_cursor->_LCD_write
    _LCD_display_value->_ltoa
    _ltoa->_ultoa
    _ultoa->___llmod
    _LCD_puts->_LCD_putch
    _LCD_putch->_LCD_write
    _convrtDegree->_GetThermistorTemp
    _GetThermistorTemp->_ADC_read
    _LCD_initialise->_LCD_clear
    _LCD_clear->_LCD_write

Critical Paths under _my_ISR in COMMON

    _my_ISR->_flip_deg

Critical Paths under _main in BANK0

    _displaySetup->_LCD_display_value
    _LCD_cursor->_LCD_write
    _LCD_display_value->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _LCD_putch->_LCD_write
    _convrtDegree->_GetThermistorTemp
    _LCD_initialise->_LCD_write
    _LCD_clear->_LCD_write

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   21654
                                             47 BANK0      4     4      0
                     _ADC_initialise
                           _ADC_read
                  _GetThermistorTemp
                          _LCD_clear
                     _LCD_initialise
                        _compareTemp
                       _convrtDegree
                       _displaySetup
 ---------------------------------------------------------------------------------
 (1) _displaySetup                                         0     0      0   15122
                 _ADC_channel_select
                         _LCD_cursor
                  _LCD_display_value
                          _LCD_putch
                           _LCD_puts
                           _mv_Right
 ---------------------------------------------------------------------------------
 (2) _mv_Right                                             2     0      2    4089
                                              7 BANK0      2     0      2
                         _LCD_cursor
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           3     2      1    2344
                                              5 COMMON     3     2      1
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_display_value                                   16    12      4    4771
                                             31 BANK0     16    12      4
                           _LCD_puts
                               _ltoa
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                 9     3      6    2115
                                              6 COMMON     2     2      0
                                             25 BANK0      6     0      6
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     7      6    1666
                                              5 COMMON     1     1      0
                                             13 BANK0     12     6      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     412
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _LCD_puts                                             5     3      2    2272
                                              7 BANK0      5     3      2
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (3) _LCD_putch                                            3     3      0    1624
                                              5 COMMON     3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _ADC_channel_select                                   2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convrtDegree                                         2     2      0     733
                                              5 BANK0      2     2      0
                           _ADC_read
                           _ConvCtoF
                  _GetThermistorTemp
 ---------------------------------------------------------------------------------
 (2) _GetThermistorTemp                                    6     4      2     490
                                              7 COMMON     1     1      0
                                              0 BANK0      5     3      2
                           _ADC_read (ARG)
 ---------------------------------------------------------------------------------
 (2) _ConvCtoF                                             6     4      2     155
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             4     2      2      23
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _compareTemp                                          1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_initialise                                       2     2      0    3526
                                              7 BANK0      2     2      0
                          _LCD_clear
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0    1661
                                              5 COMMON     2     2      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                           10     9      1    1525
                                              3 COMMON     2     1      1
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _ADC_initialise                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _my_ISR                                               2     2      0       0
                                              1 COMMON     2     2      0
                           _flip_deg
                              _reset
 ---------------------------------------------------------------------------------
 (7) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _flip_deg                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_initialise
   _ADC_read
   _GetThermistorTemp
     _ADC_read (ARG)
   _LCD_clear
     _LCD_write
   _LCD_initialise
     _LCD_clear
     _LCD_write
   _compareTemp
   _convrtDegree
     _ADC_read
     _ConvCtoF
     _GetThermistorTemp
   _displaySetup
     _ADC_channel_select
     _LCD_cursor
       _LCD_write
     _LCD_display_value
       _LCD_puts
         _LCD_putch
           _LCD_write
       _ltoa
         _ultoa
           ___lldiv
           ___llmod
     _LCD_putch
     _LCD_puts
     _mv_Right
       _LCD_cursor
       _LCD_putch

 _my_ISR (ROOT)
   _flip_deg
   _reset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
BITBANK1            20      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     33      3A       4       72.5%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45       8        0.0%
ABS                  0      0      45       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 02 07:35:29 2022

                         pc 0002                ?_compareTemp 0070                          l83 075F  
                        l95 0627                          l87 0774                          l97 063D  
                        fsr 0004               ?_displaySetup 0070                         l100 03D6  
                       l101 0417                         l108 05E0                         l141 0789  
                       l221 079D                         l230 071A                         l135 0732  
                       l207 0695                         l144 07AA                         l138 077B  
                       l242 0610                         l173 0487                         l182 0388  
                       l191 0749                         l186 03A6                         l178 0358  
                       l365 04EF                         l198 06E8                         l551 05AC  
                       l791 031F                         l783 0669                         l789 030A  
                       _GIE 005F                         u850 077F                         u851 077E  
                       u980 0621                         u981 0620                         u990 0637  
                       u991 0636                         u985 061D                         u995 0633  
               ?_LCD_cursor 0075                         fsr0 0004                         indf 0000  
                      l2001 045D                        l2011 0473                        l2021 05AD  
                      l2101 0538                        l2007 0461                        l2023 05B3  
                      l2111 0546                        l2103 0539                        l2017 0477  
                      l2009 0470                        l2025 05C1                        l2041 03BB  
                      l2033 03A7                        l2113 0554                        l2105 053D  
                      l2019 0486                        l2027 05CA                        l2051 03E0  
                      l2043 03BD                        l2035 03AA                        l2107 053E  
                      l2029 05D4                        l2061 040B                        l2053 03E3  
                      l2045 03C9                        l2037 03B1                        l2109 053F  
                      l2055 03E5                        l2047 03D2                        l2039 03B4  
                      l2071 0504                        l2063 04F0                        l2057 03FC  
                      l2049 03D9                        l2081 050D                        l2073 0505  
                      l2065 04FA                        l1603 0611                        l2059 0400  
                      l2091 051D                        l2083 050E                        l2075 0509  
                      l2067 04FD                        l1605 0621                        l1525 079F  
                      l2093 0521                        l2085 050F                        l2077 050A  
                      l2069 0501                        l1607 0637                        l2095 052B  
                      l2087 0510                        l2079 050B                        l1473 0775  
                      l1801 0488                        l2097 052F                        l2089 0511  
                      l1475 077F                        l1811 04B7                        l1803 049A  
                      l2099 0530                        l1741 0323                        l1901 068A  
                      l1813 04C9                        l1805 049D                        l1821 04E7  
                      l1583 071B                        l1751 0339                        l1743 0324  
                      l1903 068F                        l1815 04D7                        l1807 04AA  
                      l1831 0571                        l1911 064C                        l1585 0727  
                      l1753 033D                        l1745 0328                        l1921 05E3  
                      l1817 04D8                        l1809 04AE                        l1833 0575  
                      l1841 05A4                        l1825 0557                        l1913 0650  
                      l1905 063F                        l1587 072B                        l1755 0342  
                      l1747 0331                        l1931 060F                        l1923 05FC  
                      l1819 04E1                        l1835 0587                        l1827 0561  
                      l1915 065B                        l1907 063F                        l1589 072F  
                      l1773 035B                        l1765 0349                        l1757 0346  
                      l1749 0334                        l1853 073A                        l1845 0734  
                      l1837 0595                        l1829 0564                        l1861 02BE  
                      l1909 0645                        l1775 036A                        l1767 0359  
                      l1759 0347                        l1943 06C5                        l1935 06C0  
                      l1927 0605                        l1919 05E1                        l1847 0738  
                      l1839 059E                        l1871 0300                        l1863 02C6  
                      l1855 0296                        l1793 038B                        l1785 0379  
                      l1777 0376                        l1953 06D9                        l1945 06D4  
                      l1937 06C3                        l1929 0609                        l1873 0306  
                      l1865 02CA                        l1857 029E                        l1881 078B  
                      l1961 0760                        l1795 039A                        l1787 0389  
                      l1779 0377                        l1947 06D7                        l1971 041B  
                      l1955 074A                        l1891 0670                        l1875 030E  
                      l1867 02CC                        l1859 02BA                        l1883 0790  
                      l1963 076F                        l1797 039E                        l1981 0431  
                      l1957 075B                        l1893 0672                        l1877 0315  
                      l1869 02E4                        l1965 0703                        l1885 0795  
                      l1799 03A5                        l1991 0447                        l1895 067D  
                      l1879 0317                        l1967 0713                        l1887 0799  
                      l1977 041F                        l1969 0418                        l1897 0682  
                      l1889 066A                        l1987 0435                        l1979 042E  
                      l1899 0684                        l1997 044B                        l1989 0444  
                      l1999 045A                        STR_1 028D                        u1110 0339  
                      u1111 0338                        u1120 0358                        u1200 04AE  
                      u1121 0357                        u1201 04AD                        u1130 036A  
                      u1131 0369                        u1220 04C9                        u1300 05A4  
                      u1221 04C8                        u1301 05A3                        u1150 0388  
                      u1310 0749                        u1151 0387                        u1311 0748  
                      u1215 04B0                        u1160 039A                        u1400 05FC  
                      u1240 04E7                        u1320 02C6                        u1161 0399  
                      u1145 036D                        u1401 05FB                        u1241 04E6  
                      u1225 04C5                        u1321 02C5                        u1170 03A5  
                      u1410 060F                        u1250 0561                        u1330 0306  
                      u1171 03A4                        u1411 060E                        u1235 04D9  
                      u1251 0560                        u1331 0305                        u1420 06D4  
                      u1500 05B3                        u1180 049A                        u1340 031F  
                      u1421 06D3                        u1405 05F8                        u1501 05B2  
                      u1181 0499                        u1341 031E                        u1430 06E8  
                      u1510 05CA                        u1270 0575                        u1350 0790  
                      u1431 06E7                        u1511 05C9                        u1271 0574  
                      u1351 078F                        u1360 0682                        u1280 0587  
                      u1440 076F                        u1520 03D2                        u1361 0681  
                      u1281 0586                        u1265 0566                        u1441 076E  
                      u1521 03D1                        u1450 042E                        u1370 068F  
                      u1530 052F                        u1451 042D                        u1371 068E  
                      u1195 049F                        u1531 052E                        u1460 0444  
                      u1380 0695                        u1540 0538                        u1461 0443  
                      u1381 0694                        u1285 0583                        u1445 076B  
                      u1541 0537                        u1470 045A                        u1390 0645  
                      u1550 0554                        u1471 0459                        u1295 0596  
                      u1391 0644                        u1551 0553                        u1480 0470  
                      u1481 046F                        u1490 0486                        u1491 0485  
                      u1597 0543                        i1l80 07B5                        i1l92 0702  
               main@refresh 0051                        _main 04F0                        _ltoa 063E  
                      _temp 0078                        btemp 007E            LCD_putch@counter 0076  
                      start 000A            __end_of_ADC_read 078A             __end_of_TempLUT 027D  
             ?_convrtDegree 0070              ??_displaySetup 0078            __end_of_LCD_puts 0696  
                     ?_main 0070                       ?_ltoa 0039                       _ANSEL 0188  
           __end_of___lldiv 04F0             __end_of___llmod 05AD                       i1l116 06B9  
     LCD_initialise@counter 0027                       _PORTB 0006                       _PORTC 0007  
                     _TRISB 0086                       _TRISC 0087                       _reset 07AB  
                     _ultoa 0293                       pclath 000A                       status 0003  
                     wtemp0 007E             __initialization 000B            __end_of_ConvCtoF 0760  
     __end_of_ThermValueLUT 0204                 LCD_cursor@x 0077                 LCD_cursor@y 0075  
              __end_of_main 0557                __end_of_ltoa 066A              ??_convrtDegree 0078  
                    ??_main 004F                      ??_ltoa 0076              ADC_read@result 0075  
         __end_of_LCD_clear 06E9                 LCD_write@rs 0073           __end_of_LCD_putch 074A  
         __end_of_LCD_write 03A7                      _ADCON0 001F                      _ADCON1 009F  
          ___llmod@dividend 0024                      _ADRESH 001E                      _ADRESL 009E  
                    ?_reset 0070                      _ANSELH 0189                      ?_ultoa 002D  
                    u101_20 06F9                      u101_21 06F8                      i1l1701 0696  
                    i1l1711 06AA                      i1l1703 069A                      u105_20 069A  
                    i1l1641 06E9                      i1l1713 06AE                      i1l1705 06A0  
                    u105_21 0699                      i1l1643 06F3                      i1l1715 06B4  
                    i1l1707 06A6                      i1l1645 06F9                      i1l1717 06B5  
                    i1l1709 06A7                      i1l1647 06FE                      i1l1639 07AB  
                    i1l1719 06B8                      u106_20 06A0                      u106_21 069F  
                    u107_20 06AE                      u107_21 06AD                      _TRISB0 0430  
                    _TRISB1 0431                      _Degree 007A            ??_ADC_initialise 0073  
          __end_of_flip_deg 0703                   ??___lldiv 0073                   ??___llmod 0073  
                    _my_ISR 0696            __end_of_mv_Right 0775                __pdataCOMMON 007A  
                    saved_w 007E                   ?_ADC_read 0073                      ultoa@c 0037  
                    ultoa@v 0033     __end_of__initialization 001B        __end_of_displaySetup 0418  
                 ?_LCD_puts 0027              __pcstackCOMMON 0070                __pidataBANK0 07B6  
            _LCD_initialise 0418               __end_of_reset 07B6               __end_of_ultoa 0320  
        LCD_write@TRISC_BAK 0022                   LCD_puts@c 002B                   LCD_puts@i 002A  
                 LCD_puts@s 0027                ??_LCD_cursor 0076              _OPTION_REGbits 0081  
                ??_ADC_read 0075                   ?_ConvCtoF 0073                     ??_reset 0070  
                   ??_ultoa 0075                  __pbssBANK0 0058  __end_of_ADC_channel_select 07AB  
      __end_of_convrtDegree 05E1                  ??_LCD_puts 0029                  __pmaintext 04F0  
        __end_of_LCD_cursor 079E      __end_of_LCD_initialise 0488                  __pintentry 0004  
                   ?_my_ISR 0070            LCD_write@counter 0025                  ??_ConvCtoF 0075  
                 ?_flip_deg 0070                  __stringtab 0100                   ?_mv_Right 0027  
                   _TempLUT 0204             ?_LCD_initialise 0070                     ___lldiv 0488  
                   ___llmod 0557                     __ptext1 03A7                     __ptext2 0760  
                   __ptext3 078A                     __ptext4 0703                     __ptext5 063E  
                   __ptext6 0293                     __ptext7 0557                     __ptext8 0488  
                   __ptext9 066A                     _tempMax 0053                     _tempMin 0055  
                ??_flip_deg 0070                   _LCD_clear 06C0        end_of_initialization 001B  
         __end_of_myString1 0283           __end_of_myString2 028D           __end_of_myString3 0288  
                 _LCD_putch 0733                   _LCD_write 0320                  ??_mv_Right 0078  
                   ltoa@buf 0077                     ltoa@val 0039             ___lldiv@divisor 0020  
           ___lldiv@counter 002C                __pstringtext 0100                   _PORTBbits 0006  
                 _PORTCbits 0007                _displaySetup 03A7             _count_Interrupt 0058  
         _GetThermistorTemp 05E1          ?_GetThermistorTemp 0020                  ?_LCD_clear 0070  
                ?_LCD_putch 0070                  ?_LCD_write 0073         ??_GetThermistorTemp 0022  
             ??_compareTemp 0073                _convrtDegree 05AD               __pidataCOMMON 07BB  
            __end_of_my_ISR 06C0   __end_of_GetThermistorTemp 0611         start_initialization 000B  
                LCD_putch@c 0075                  LCD_write@c 0023             ___llmod@divisor 0020  
           ___llmod@counter 0074          _ADC_channel_select 079E               _ThermValueLUT 0112  
               __pdataBANK0 0053                    ??_my_ISR 0071         ?_ADC_channel_select 0070  
       __end_of_compareTemp 063E                 __pbssCOMMON 0078                   ___latbits 0000  
             __pcstackBANK0 0020   ADC_channel_select@channel 0074          GetThermistorTemp@i 0077  
          LCD_clear@counter 0075                 ??_LCD_clear 0075                 ??_LCD_putch 0075  
               ??_LCD_write 0074        ??_ADC_channel_select 0073            ??_LCD_initialise 0077  
           LCD_write@RSmask 0024               LCD_write@temp 0020                    ?___lldiv 0020  
                  ?___llmod 0020             LCD_write@intsON 0021                    _ADC_read 0775  
         interrupt_function 0004                    _IOCBbits 0096                    _LCD_puts 066A  
                 _myString1 027D                   _myString2 0288                   _myString3 0283  
               _compareTemp 0611                  _ADCON0bits 001F                 __stringbase 0112  
             ConvCtoF@tempC 0073               ConvCtoF@tempF 0020                    _ConvCtoF 074A  
   LCD_display_value@buffer 0043               _temparraysize 0057          __end_of__stringtab 0112  
                 mv_Right@a 0027              _ADC_initialise 071B                    __ptext10 0733  
                  __ptext11 079E                    __ptext20 071B                    __ptext12 05AD  
                  __ptext21 0696                    __ptext13 05E1                    __ptext22 07AB  
                  __ptext14 074A                    __ptext23 06E9                    __ptext15 0775  
                  __ptext16 0611                    __ptext17 0418                    __ptext18 06C0  
                  __ptext19 0320                    _flip_deg 06E9                    _mv_Right 0760  
         _LCD_display_value 0703          ?_LCD_display_value 003F      __end_of_ADC_initialise 0733  
                _LCD_cursor 078A         ??_LCD_display_value 0078                  _INTCONbits 000B  
                 ultoa@base 0031      LCD_display_value@value 003F                    intlevel1 0000  
                  ltoa@base 003D            ___lldiv@dividend 0024   __end_of_LCD_display_value 071B  
                 stringcode 010A             ?_ADC_initialise 0070                    ultoa@buf 0038  
                  ultoa@val 002D            ___lldiv@quotient 0028   GetThermistorTemp@ADCValue 0020  
                  stringtab 0100       convrtDegree@tempCheck 0025  
